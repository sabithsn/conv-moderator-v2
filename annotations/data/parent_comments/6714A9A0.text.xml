Document: ID=6714A9A0.text (3 sentences, 54 tokens)

Sentence #1 (13 tokens):
because you will read me and then you are going to die.

Tokens:
[Text=because CharacterOffsetBegin=0 CharacterOffsetEnd=7 PartOfSpeech=IN Lemma=because NamedEntityTag=O]
[Text=you CharacterOffsetBegin=8 CharacterOffsetEnd=11 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text=will CharacterOffsetBegin=12 CharacterOffsetEnd=16 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=read CharacterOffsetBegin=17 CharacterOffsetEnd=21 PartOfSpeech=VB Lemma=read NamedEntityTag=O]
[Text=me CharacterOffsetBegin=22 CharacterOffsetEnd=24 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=and CharacterOffsetBegin=25 CharacterOffsetEnd=28 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=then CharacterOffsetBegin=29 CharacterOffsetEnd=33 PartOfSpeech=RB Lemma=then NamedEntityTag=O]
[Text=you CharacterOffsetBegin=34 CharacterOffsetEnd=37 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text=are CharacterOffsetBegin=38 CharacterOffsetEnd=41 PartOfSpeech=VBP Lemma=be NamedEntityTag=O]
[Text=going CharacterOffsetBegin=42 CharacterOffsetEnd=47 PartOfSpeech=VBG Lemma=go NamedEntityTag=O]
[Text=to CharacterOffsetBegin=48 CharacterOffsetEnd=50 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=die CharacterOffsetBegin=51 CharacterOffsetEnd=54 PartOfSpeech=VB Lemma=die NamedEntityTag=O]
[Text=. CharacterOffsetBegin=54 CharacterOffsetEnd=55 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (SBAR (IN because)
    (S
      (S
        (NP (PRP you))
        (VP (MD will)
          (VP (VB read)
            (NP (PRP me)))))
      (CC and)
      (S
        (ADVP (RB then))
        (NP (PRP you))
        (VP (VBP are)
          (VP (VBG going)
            (S
              (VP (TO to)
                (VP (VB die))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, read-4)
mark(read-4, because-1)
nsubj(read-4, you-2)
aux(read-4, will-3)
obj(read-4, me-5)
cc(going-10, and-6)
advmod(going-10, then-7)
nsubj(going-10, you-8)
nsubj:xsubj(die-12, you-8)
aux(going-10, are-9)
conj:and(read-4, going-10)
mark(die-12, to-11)
xcomp(going-10, die-12)
punct(read-4, .-13)

Extracted the following NER entity mentions:

Sentence #2 (23 tokens):
Without reading is just a prop with an absurd set of requirements and a required verbal setup, pretty meh prank attempt.

Tokens:
[Text=Without CharacterOffsetBegin=58 CharacterOffsetEnd=65 PartOfSpeech=IN Lemma=without NamedEntityTag=O]
[Text=reading CharacterOffsetBegin=66 CharacterOffsetEnd=73 PartOfSpeech=NN Lemma=reading NamedEntityTag=O]
[Text=is CharacterOffsetBegin=74 CharacterOffsetEnd=76 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=just CharacterOffsetBegin=77 CharacterOffsetEnd=81 PartOfSpeech=RB Lemma=just NamedEntityTag=O]
[Text=a CharacterOffsetBegin=82 CharacterOffsetEnd=83 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=prop CharacterOffsetBegin=84 CharacterOffsetEnd=88 PartOfSpeech=NN Lemma=prop NamedEntityTag=O]
[Text=with CharacterOffsetBegin=89 CharacterOffsetEnd=93 PartOfSpeech=IN Lemma=with NamedEntityTag=O]
[Text=an CharacterOffsetBegin=94 CharacterOffsetEnd=96 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=absurd CharacterOffsetBegin=97 CharacterOffsetEnd=103 PartOfSpeech=JJ Lemma=absurd NamedEntityTag=O]
[Text=set CharacterOffsetBegin=104 CharacterOffsetEnd=107 PartOfSpeech=NN Lemma=set NamedEntityTag=O]
[Text=of CharacterOffsetBegin=108 CharacterOffsetEnd=110 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=requirements CharacterOffsetBegin=111 CharacterOffsetEnd=123 PartOfSpeech=NNS Lemma=requirement NamedEntityTag=O]
[Text=and CharacterOffsetBegin=124 CharacterOffsetEnd=127 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=a CharacterOffsetBegin=128 CharacterOffsetEnd=129 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=required CharacterOffsetBegin=130 CharacterOffsetEnd=138 PartOfSpeech=JJ Lemma=required NamedEntityTag=O]
[Text=verbal CharacterOffsetBegin=139 CharacterOffsetEnd=145 PartOfSpeech=JJ Lemma=verbal NamedEntityTag=O]
[Text=setup CharacterOffsetBegin=146 CharacterOffsetEnd=151 PartOfSpeech=NN Lemma=setup NamedEntityTag=O]
[Text=, CharacterOffsetBegin=151 CharacterOffsetEnd=152 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=pretty CharacterOffsetBegin=153 CharacterOffsetEnd=159 PartOfSpeech=RB Lemma=pretty NamedEntityTag=O]
[Text=meh CharacterOffsetBegin=160 CharacterOffsetEnd=163 PartOfSpeech=JJ Lemma=meh NamedEntityTag=O]
[Text=prank CharacterOffsetBegin=164 CharacterOffsetEnd=169 PartOfSpeech=NN Lemma=prank NamedEntityTag=O]
[Text=attempt CharacterOffsetBegin=170 CharacterOffsetEnd=177 PartOfSpeech=NN Lemma=attempt NamedEntityTag=O]
[Text=. CharacterOffsetBegin=177 CharacterOffsetEnd=178 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (PP (IN Without)
      (NP (NN reading)))
    (VP (VBZ is)
      (ADVP (RB just))
      (NP
        (NP (DT a) (NN prop))
        (PP (IN with)
          (NP
            (NP
              (NP (DT an) (JJ absurd) (NN set))
              (PP (IN of)
                (NP
                  (NP (NNS requirements))
                  (CC and)
                  (NP (DT a) (JJ required) (JJ verbal) (NN setup)))))
            (, ,) (RB pretty)
            (NP (JJ meh) (NN prank) (NN attempt))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, prop-6)
case(reading-2, Without-1)
obl:without(prop-6, reading-2)
cop(prop-6, is-3)
advmod(prop-6, just-4)
det(prop-6, a-5)
case(set-10, with-7)
det(set-10, an-8)
amod(set-10, absurd-9)
nmod:with(prop-6, set-10)
case(requirements-12, of-11)
nmod:of(set-10, requirements-12)
cc(setup-17, and-13)
det(setup-17, a-14)
amod(setup-17, required-15)
amod(setup-17, verbal-16)
nmod:of(set-10, setup-17)
conj:and(requirements-12, setup-17)
punct(set-10, ,-18)
advmod(set-10, pretty-19)
amod(attempt-22, meh-20)
compound(attempt-22, prank-21)
dep(set-10, attempt-22)
punct(prop-6, .-23)

Extracted the following NER entity mentions:

Sentence #3 (18 tokens):
The joke was DOA  Edit: Lmao at having the last word then blocking me because I disagree

Tokens:
[Text=The CharacterOffsetBegin=181 CharacterOffsetEnd=184 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=joke CharacterOffsetBegin=185 CharacterOffsetEnd=189 PartOfSpeech=NN Lemma=joke NamedEntityTag=O]
[Text=was CharacterOffsetBegin=190 CharacterOffsetEnd=193 PartOfSpeech=VBD Lemma=be NamedEntityTag=O]
[Text=DOA CharacterOffsetBegin=194 CharacterOffsetEnd=197 PartOfSpeech=JJ Lemma=doa NamedEntityTag=O]
[Text=Edit CharacterOffsetBegin=199 CharacterOffsetEnd=203 PartOfSpeech=NN Lemma=edit NamedEntityTag=O]
[Text=: CharacterOffsetBegin=203 CharacterOffsetEnd=204 PartOfSpeech=: Lemma=: NamedEntityTag=O]
[Text=Lmao CharacterOffsetBegin=205 CharacterOffsetEnd=209 PartOfSpeech=NNP Lemma=Lmao NamedEntityTag=PERSON]
[Text=at CharacterOffsetBegin=210 CharacterOffsetEnd=212 PartOfSpeech=IN Lemma=at NamedEntityTag=O]
[Text=having CharacterOffsetBegin=213 CharacterOffsetEnd=219 PartOfSpeech=VBG Lemma=have NamedEntityTag=O]
[Text=the CharacterOffsetBegin=220 CharacterOffsetEnd=223 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=last CharacterOffsetBegin=224 CharacterOffsetEnd=228 PartOfSpeech=JJ Lemma=last NamedEntityTag=O]
[Text=word CharacterOffsetBegin=229 CharacterOffsetEnd=233 PartOfSpeech=NN Lemma=word NamedEntityTag=O]
[Text=then CharacterOffsetBegin=234 CharacterOffsetEnd=238 PartOfSpeech=RB Lemma=then NamedEntityTag=O]
[Text=blocking CharacterOffsetBegin=239 CharacterOffsetEnd=247 PartOfSpeech=VBG Lemma=block NamedEntityTag=O]
[Text=me CharacterOffsetBegin=248 CharacterOffsetEnd=250 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=because CharacterOffsetBegin=251 CharacterOffsetEnd=258 PartOfSpeech=IN Lemma=because NamedEntityTag=O]
[Text=I CharacterOffsetBegin=259 CharacterOffsetEnd=260 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=disagree CharacterOffsetBegin=261 CharacterOffsetEnd=269 PartOfSpeech=VBP Lemma=disagree NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (DT The) (NN joke))
    (VP (VBD was)
      (NP
        (NP (JJ DOA) (NN Edit))
        (: :)
        (NP
          (NP (NNP Lmao))
          (PP (IN at)
            (S
              (VP (VBG having)
                (S
                  (NP (DT the) (JJ last) (NN word))
                  (ADVP (RB then))
                  (VP (VBG blocking)
                    (NP (PRP me))
                    (SBAR (IN because)
                      (S
                        (NP (PRP I))
                        (VP (VBP disagree))))))))))))))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, Edit-5)
det(joke-2, The-1)
nsubj(Edit-5, joke-2)
cop(Edit-5, was-3)
amod(Edit-5, DOA-4)
punct(Edit-5, :-6)
dep(Edit-5, Lmao-7)
mark(having-9, at-8)
acl:at(Lmao-7, having-9)
det(word-12, the-10)
amod(word-12, last-11)
nsubj(blocking-14, word-12)
advmod(blocking-14, then-13)
advcl(having-9, blocking-14)
obj(blocking-14, me-15)
mark(disagree-18, because-16)
nsubj(disagree-18, I-17)
advcl:because(blocking-14, disagree-18)

Extracted the following NER entity mentions:
Lmao	PERSON	PERSON:0.4609960401604047
