Document: ID=20A84ED0.text (21 sentences, 250 tokens)

Sentence #1 (2 tokens):
1.

Tokens:
[Text=1 CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=LS Lemma=1 NamedEntityTag=NUMBER NormalizedNamedEntityTag=1.0]
[Text=. CharacterOffsetBegin=1 CharacterOffsetEnd=2 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (LST (LS 1) (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, 1-1)
punct(1-1, .-2)

Extracted the following NER entity mentions:
1	NUMBER	NUMBER:-1.0

Sentence #2 (9 tokens):
Your planes landing are politics, not science.

Tokens:
[Text=Your CharacterOffsetBegin=3 CharacterOffsetEnd=7 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O]
[Text=planes CharacterOffsetBegin=8 CharacterOffsetEnd=14 PartOfSpeech=NNS Lemma=plane NamedEntityTag=O]
[Text=landing CharacterOffsetBegin=15 CharacterOffsetEnd=22 PartOfSpeech=VBG Lemma=land NamedEntityTag=O]
[Text=are CharacterOffsetBegin=23 CharacterOffsetEnd=26 PartOfSpeech=VBP Lemma=be NamedEntityTag=O]
[Text=politics CharacterOffsetBegin=27 CharacterOffsetEnd=35 PartOfSpeech=NNS Lemma=politics NamedEntityTag=O]
[Text=, CharacterOffsetBegin=35 CharacterOffsetEnd=36 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=not CharacterOffsetBegin=37 CharacterOffsetEnd=40 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
[Text=science CharacterOffsetBegin=41 CharacterOffsetEnd=48 PartOfSpeech=NN Lemma=science NamedEntityTag=O]
[Text=. CharacterOffsetBegin=48 CharacterOffsetEnd=49 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP
      (NP (PRP$ Your) (NNS planes))
      (VP (VBG landing)))
    (VP (VBP are)
      (NP (NNS politics) (, ,) (RB not) (NN science)))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, science-8)
nmod:poss(planes-2, Your-1)
nsubj(science-8, planes-2)
acl(planes-2, landing-3)
cop(science-8, are-4)
compound(science-8, politics-5)
punct(science-8, ,-6)
advmod(science-8, not-7)
punct(science-8, .-9)

Extracted the following NER entity mentions:

Sentence #3 (7 tokens):
Cast blame on the guilty party.

Tokens:
[Text=Cast CharacterOffsetBegin=50 CharacterOffsetEnd=54 PartOfSpeech=VBN Lemma=cast NamedEntityTag=O]
[Text=blame CharacterOffsetBegin=55 CharacterOffsetEnd=60 PartOfSpeech=NN Lemma=blame NamedEntityTag=O]
[Text=on CharacterOffsetBegin=61 CharacterOffsetEnd=63 PartOfSpeech=IN Lemma=on NamedEntityTag=O]
[Text=the CharacterOffsetBegin=64 CharacterOffsetEnd=67 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=guilty CharacterOffsetBegin=68 CharacterOffsetEnd=74 PartOfSpeech=JJ Lemma=guilty NamedEntityTag=O]
[Text=party CharacterOffsetBegin=75 CharacterOffsetEnd=80 PartOfSpeech=NN Lemma=party NamedEntityTag=O]
[Text=. CharacterOffsetBegin=80 CharacterOffsetEnd=81 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (VP (VBN Cast)
      (NP (NN blame))
      (PP (IN on)
        (NP (DT the) (JJ guilty) (NN party))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, Cast-1)
obj(Cast-1, blame-2)
case(party-6, on-3)
det(party-6, the-4)
amod(party-6, guilty-5)
obl:on(Cast-1, party-6)
punct(Cast-1, .-7)

Extracted the following NER entity mentions:

Sentence #4 (43 tokens):
Since there is no scientific or logical reason to turn a plane around based on someone's vaccine status, positive test, or whatever (not sure why they're doing this), then this is an unnecessary authoritarian policy.

Tokens:
[Text=Since CharacterOffsetBegin=82 CharacterOffsetEnd=87 PartOfSpeech=IN Lemma=since NamedEntityTag=O]
[Text=there CharacterOffsetBegin=88 CharacterOffsetEnd=93 PartOfSpeech=EX Lemma=there NamedEntityTag=O]
[Text=is CharacterOffsetBegin=94 CharacterOffsetEnd=96 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=no CharacterOffsetBegin=97 CharacterOffsetEnd=99 PartOfSpeech=DT Lemma=no NamedEntityTag=O]
[Text=scientific CharacterOffsetBegin=100 CharacterOffsetEnd=110 PartOfSpeech=JJ Lemma=scientific NamedEntityTag=O]
[Text=or CharacterOffsetBegin=111 CharacterOffsetEnd=113 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=logical CharacterOffsetBegin=114 CharacterOffsetEnd=121 PartOfSpeech=JJ Lemma=logical NamedEntityTag=O]
[Text=reason CharacterOffsetBegin=122 CharacterOffsetEnd=128 PartOfSpeech=NN Lemma=reason NamedEntityTag=O]
[Text=to CharacterOffsetBegin=129 CharacterOffsetEnd=131 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=turn CharacterOffsetBegin=132 CharacterOffsetEnd=136 PartOfSpeech=VB Lemma=turn NamedEntityTag=O]
[Text=a CharacterOffsetBegin=137 CharacterOffsetEnd=138 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=plane CharacterOffsetBegin=139 CharacterOffsetEnd=144 PartOfSpeech=NN Lemma=plane NamedEntityTag=O]
[Text=around CharacterOffsetBegin=145 CharacterOffsetEnd=151 PartOfSpeech=IN Lemma=around NamedEntityTag=O]
[Text=based CharacterOffsetBegin=152 CharacterOffsetEnd=157 PartOfSpeech=VBN Lemma=base NamedEntityTag=O]
[Text=on CharacterOffsetBegin=158 CharacterOffsetEnd=160 PartOfSpeech=IN Lemma=on NamedEntityTag=O]
[Text=someone CharacterOffsetBegin=161 CharacterOffsetEnd=168 PartOfSpeech=NN Lemma=someone NamedEntityTag=O]
[Text='s CharacterOffsetBegin=168 CharacterOffsetEnd=170 PartOfSpeech=POS Lemma='s NamedEntityTag=O]
[Text=vaccine CharacterOffsetBegin=171 CharacterOffsetEnd=178 PartOfSpeech=NN Lemma=vaccine NamedEntityTag=O]
[Text=status CharacterOffsetBegin=179 CharacterOffsetEnd=185 PartOfSpeech=NN Lemma=status NamedEntityTag=O]
[Text=, CharacterOffsetBegin=185 CharacterOffsetEnd=186 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=positive CharacterOffsetBegin=187 CharacterOffsetEnd=195 PartOfSpeech=JJ Lemma=positive NamedEntityTag=O]
[Text=test CharacterOffsetBegin=196 CharacterOffsetEnd=200 PartOfSpeech=NN Lemma=test NamedEntityTag=O]
[Text=, CharacterOffsetBegin=200 CharacterOffsetEnd=201 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=or CharacterOffsetBegin=202 CharacterOffsetEnd=204 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=whatever CharacterOffsetBegin=205 CharacterOffsetEnd=213 PartOfSpeech=WDT Lemma=whatever NamedEntityTag=O]
[Text=( CharacterOffsetBegin=214 CharacterOffsetEnd=215 PartOfSpeech=-LRB- Lemma=( NamedEntityTag=O]
[Text=not CharacterOffsetBegin=215 CharacterOffsetEnd=218 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
[Text=sure CharacterOffsetBegin=219 CharacterOffsetEnd=223 PartOfSpeech=JJ Lemma=sure NamedEntityTag=O]
[Text=why CharacterOffsetBegin=224 CharacterOffsetEnd=227 PartOfSpeech=WRB Lemma=why NamedEntityTag=O]
[Text=they CharacterOffsetBegin=228 CharacterOffsetEnd=232 PartOfSpeech=PRP Lemma=they NamedEntityTag=O]
[Text='re CharacterOffsetBegin=232 CharacterOffsetEnd=235 PartOfSpeech=VBP Lemma=be NamedEntityTag=O]
[Text=doing CharacterOffsetBegin=236 CharacterOffsetEnd=241 PartOfSpeech=VBG Lemma=do NamedEntityTag=O]
[Text=this CharacterOffsetBegin=242 CharacterOffsetEnd=246 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=) CharacterOffsetBegin=246 CharacterOffsetEnd=247 PartOfSpeech=-RRB- Lemma=) NamedEntityTag=O]
[Text=, CharacterOffsetBegin=247 CharacterOffsetEnd=248 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=then CharacterOffsetBegin=249 CharacterOffsetEnd=253 PartOfSpeech=RB Lemma=then NamedEntityTag=O]
[Text=this CharacterOffsetBegin=254 CharacterOffsetEnd=258 PartOfSpeech=DT Lemma=this NamedEntityTag=O]
[Text=is CharacterOffsetBegin=259 CharacterOffsetEnd=261 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=an CharacterOffsetBegin=262 CharacterOffsetEnd=264 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=unnecessary CharacterOffsetBegin=265 CharacterOffsetEnd=276 PartOfSpeech=JJ Lemma=unnecessary NamedEntityTag=O]
[Text=authoritarian CharacterOffsetBegin=277 CharacterOffsetEnd=290 PartOfSpeech=JJ Lemma=authoritarian NamedEntityTag=O]
[Text=policy CharacterOffsetBegin=291 CharacterOffsetEnd=297 PartOfSpeech=NN Lemma=policy NamedEntityTag=O]
[Text=. CharacterOffsetBegin=297 CharacterOffsetEnd=298 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (SBAR (IN Since)
      (S
        (NP (EX there))
        (VP (VBZ is)
          (NP (DT no)
            (ADJP (JJ scientific)
              (CC or)
              (JJ logical))
            (NN reason)
            (S
              (VP (TO to)
                (VP (VB turn)
                  (NP (DT a) (NN plane))
                  (PP (IN around) (VBN based)
                    (PP (IN on)
                      (NP
                        (NP
                          (NP (NN someone) (POS 's))
                          (NN vaccine) (NN status))
                        (, ,)
                        (NP (JJ positive) (NN test))
                        (, ,)
                        (CC or)
                        (NP (WDT whatever)))))))))
          (PRN (-LRB- -LRB-)
            (ADJP (RB not) (JJ sure))
            (SBAR
              (WHADVP (WRB why))
              (S
                (NP (PRP they))
                (VP (VBP 're)
                  (VP (VBG doing)
                    (NP (DT this))))))
            (-RRB- -RRB-)))))
    (, ,)
    (ADVP (RB then))
    (NP (DT this))
    (VP (VBZ is)
      (NP (DT an)
        (ADJP (JJ unnecessary) (JJ authoritarian))
        (NN policy)))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, is-38)
mark(is-3, Since-1)
expl(is-3, there-2)
advcl:since(is-38, is-3)
det(reason-8, no-4)
amod(reason-8, scientific-5)
cc(logical-7, or-6)
conj:or(scientific-5, logical-7)
amod(reason-8, logical-7)
nsubj(is-3, reason-8)
mark(turn-10, to-9)
acl:to(reason-8, turn-10)
det(plane-12, a-11)
obj(turn-10, plane-12)
case(status-19, around-13)
case(status-19, based-14)
fixed(based-14, on-15)
nmod:poss(status-19, someone-16)
case(someone-16, 's-17)
compound(status-19, vaccine-18)
advcl:based_on(turn-10, status-19)
punct(status-19, ,-20)
amod(test-22, positive-21)
advcl:based_on(turn-10, test-22)
conj:or(status-19, test-22)
punct(status-19, ,-23)
cc(whatever-25, or-24)
advcl:based_on(turn-10, whatever-25)
conj:or(status-19, whatever-25)
punct(doing-32, (-26)
advmod(sure-28, not-27)
dep(doing-32, sure-28)
advmod(doing-32, why-29)
nsubj(doing-32, they-30)
aux(doing-32, 're-31)
parataxis(is-3, doing-32)
obj(doing-32, this-33)
punct(doing-32, )-34)
punct(is-38, ,-35)
advmod(this-37, then-36)
nsubj(is-38, this-37)
det(policy-42, an-39)
advmod(authoritarian-41, unnecessary-40)
amod(policy-42, authoritarian-41)
dep(is-38, policy-42)
punct(is-38, .-43)

Extracted the following NER entity mentions:

Sentence #5 (2 tokens):
2.

Tokens:
[Text=2 CharacterOffsetBegin=300 CharacterOffsetEnd=301 PartOfSpeech=LS Lemma=2 NamedEntityTag=NUMBER NormalizedNamedEntityTag=2.0]
[Text=. CharacterOffsetBegin=301 CharacterOffsetEnd=302 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (LST (LS 2) (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, 2-1)
punct(2-1, .-2)

Extracted the following NER entity mentions:
2	NUMBER	NUMBER:-1.0

Sentence #6 (8 tokens):
How old do you think history is?

Tokens:
[Text=How CharacterOffsetBegin=303 CharacterOffsetEnd=306 PartOfSpeech=WRB Lemma=how NamedEntityTag=O]
[Text=old CharacterOffsetBegin=307 CharacterOffsetEnd=310 PartOfSpeech=JJ Lemma=old NamedEntityTag=O]
[Text=do CharacterOffsetBegin=311 CharacterOffsetEnd=313 PartOfSpeech=VBP Lemma=do NamedEntityTag=O]
[Text=you CharacterOffsetBegin=314 CharacterOffsetEnd=317 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text=think CharacterOffsetBegin=318 CharacterOffsetEnd=323 PartOfSpeech=VB Lemma=think NamedEntityTag=O]
[Text=history CharacterOffsetBegin=324 CharacterOffsetEnd=331 PartOfSpeech=NN Lemma=history NamedEntityTag=O]
[Text=is CharacterOffsetBegin=332 CharacterOffsetEnd=334 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=? CharacterOffsetBegin=334 CharacterOffsetEnd=335 PartOfSpeech=. Lemma=? NamedEntityTag=O]

Constituency parse: 
(ROOT
  (SBARQ
    (WHADJP (WRB How) (JJ old))
    (SQ (VBP do)
      (NP (PRP you))
      (VP (VB think)
        (SBAR
          (S
            (NP (NN history))
            (VP (VBZ is))))))
    (. ?)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, think-5)
advmod(old-2, How-1)
dep(think-5, old-2)
aux(think-5, do-3)
nsubj(think-5, you-4)
nsubj(is-7, history-6)
ccomp(think-5, is-7)
punct(think-5, ?-8)

Extracted the following NER entity mentions:

Sentence #7 (2 tokens):
3.

Tokens:
[Text=3 CharacterOffsetBegin=336 CharacterOffsetEnd=337 PartOfSpeech=LS Lemma=3 NamedEntityTag=NUMBER NormalizedNamedEntityTag=3.0]
[Text=. CharacterOffsetBegin=337 CharacterOffsetEnd=338 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (LST (LS 3) (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, 3-1)
punct(3-1, .-2)

Extracted the following NER entity mentions:
3	NUMBER	NUMBER:-1.0

Sentence #8 (6 tokens):
We're your grandparents vaccinated?

Tokens:
[Text=We CharacterOffsetBegin=339 CharacterOffsetEnd=341 PartOfSpeech=PRP Lemma=we NamedEntityTag=O]
[Text='re CharacterOffsetBegin=341 CharacterOffsetEnd=344 PartOfSpeech=VBP Lemma=be NamedEntityTag=O]
[Text=your CharacterOffsetBegin=345 CharacterOffsetEnd=349 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O]
[Text=grandparents CharacterOffsetBegin=350 CharacterOffsetEnd=362 PartOfSpeech=NNS Lemma=grandparent NamedEntityTag=O]
[Text=vaccinated CharacterOffsetBegin=363 CharacterOffsetEnd=373 PartOfSpeech=VBN Lemma=vaccinate NamedEntityTag=O]
[Text=? CharacterOffsetBegin=373 CharacterOffsetEnd=374 PartOfSpeech=. Lemma=? NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (PRP We))
    (VP (VBP 're)
      (NP
        (NP (PRP$ your) (NNS grandparents))
        (VP (VBN vaccinated))))
    (. ?)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, grandparents-4)
nsubj(grandparents-4, We-1)
cop(grandparents-4, 're-2)
nmod:poss(grandparents-4, your-3)
acl(grandparents-4, vaccinated-5)
punct(grandparents-4, ?-6)

Extracted the following NER entity mentions:

Sentence #9 (8 tokens):
If not, that's their fault.

Tokens:
[Text=If CharacterOffsetBegin=375 CharacterOffsetEnd=377 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=not CharacterOffsetBegin=378 CharacterOffsetEnd=381 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
[Text=, CharacterOffsetBegin=381 CharacterOffsetEnd=382 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=that CharacterOffsetBegin=383 CharacterOffsetEnd=387 PartOfSpeech=DT Lemma=that NamedEntityTag=O]
[Text='s CharacterOffsetBegin=387 CharacterOffsetEnd=389 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=their CharacterOffsetBegin=390 CharacterOffsetEnd=395 PartOfSpeech=PRP$ Lemma=they NamedEntityTag=O]
[Text=fault CharacterOffsetBegin=396 CharacterOffsetEnd=401 PartOfSpeech=NN Lemma=fault NamedEntityTag=O]
[Text=. CharacterOffsetBegin=401 CharacterOffsetEnd=402 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (SBAR (IN If)
      (FRAG (RB not)))
    (, ,)
    (NP (DT that))
    (VP (VBZ 's)
      (NP (PRP$ their) (NN fault)))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, fault-7)
mark(not-2, If-1)
advcl:if(fault-7, not-2)
punct(fault-7, ,-3)
nsubj(fault-7, that-4)
cop(fault-7, 's-5)
nmod:poss(fault-7, their-6)
punct(fault-7, .-8)

Extracted the following NER entity mentions:

Sentence #10 (23 tokens):
If they didn't yet have access to the vaccines then your argument for me getting vaccinated to save them is invalid.

Tokens:
[Text=If CharacterOffsetBegin=403 CharacterOffsetEnd=405 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=they CharacterOffsetBegin=406 CharacterOffsetEnd=410 PartOfSpeech=PRP Lemma=they NamedEntityTag=O]
[Text=did CharacterOffsetBegin=411 CharacterOffsetEnd=414 PartOfSpeech=VBD Lemma=do NamedEntityTag=O]
[Text=n't CharacterOffsetBegin=414 CharacterOffsetEnd=417 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
[Text=yet CharacterOffsetBegin=418 CharacterOffsetEnd=421 PartOfSpeech=RB Lemma=yet NamedEntityTag=O]
[Text=have CharacterOffsetBegin=422 CharacterOffsetEnd=426 PartOfSpeech=VB Lemma=have NamedEntityTag=O]
[Text=access CharacterOffsetBegin=427 CharacterOffsetEnd=433 PartOfSpeech=NN Lemma=access NamedEntityTag=O]
[Text=to CharacterOffsetBegin=434 CharacterOffsetEnd=436 PartOfSpeech=IN Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=437 CharacterOffsetEnd=440 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=vaccines CharacterOffsetBegin=441 CharacterOffsetEnd=449 PartOfSpeech=NNS Lemma=vaccine NamedEntityTag=O]
[Text=then CharacterOffsetBegin=450 CharacterOffsetEnd=454 PartOfSpeech=RB Lemma=then NamedEntityTag=O]
[Text=your CharacterOffsetBegin=455 CharacterOffsetEnd=459 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O]
[Text=argument CharacterOffsetBegin=460 CharacterOffsetEnd=468 PartOfSpeech=NN Lemma=argument NamedEntityTag=O]
[Text=for CharacterOffsetBegin=469 CharacterOffsetEnd=472 PartOfSpeech=IN Lemma=for NamedEntityTag=O]
[Text=me CharacterOffsetBegin=473 CharacterOffsetEnd=475 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=getting CharacterOffsetBegin=476 CharacterOffsetEnd=483 PartOfSpeech=VBG Lemma=get NamedEntityTag=O]
[Text=vaccinated CharacterOffsetBegin=484 CharacterOffsetEnd=494 PartOfSpeech=VBN Lemma=vaccinate NamedEntityTag=O]
[Text=to CharacterOffsetBegin=495 CharacterOffsetEnd=497 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=save CharacterOffsetBegin=498 CharacterOffsetEnd=502 PartOfSpeech=VB Lemma=save NamedEntityTag=O]
[Text=them CharacterOffsetBegin=503 CharacterOffsetEnd=507 PartOfSpeech=PRP Lemma=they NamedEntityTag=O]
[Text=is CharacterOffsetBegin=508 CharacterOffsetEnd=510 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=invalid CharacterOffsetBegin=511 CharacterOffsetEnd=518 PartOfSpeech=JJ Lemma=invalid NamedEntityTag=O]
[Text=. CharacterOffsetBegin=518 CharacterOffsetEnd=519 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP they))
        (VP (VBD did) (RB n't)
          (ADVP (RB yet))
          (VP (VB have)
            (NP
              (NP (NN access))
              (PP (IN to)
                (NP (DT the) (NNS vaccines))))
            (ADVP (RB then))))))
    (NP
      (NP (PRP$ your) (NN argument))
      (PP (IN for)
        (S
          (NP (PRP me))
          (VP (VBG getting)
            (VP (VBN vaccinated)
              (S
                (VP (TO to)
                  (VP (VB save)
                    (NP (PRP them))))))))))
    (VP (VBZ is)
      (ADJP (JJ invalid)))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, invalid-22)
mark(have-6, If-1)
nsubj(have-6, they-2)
aux(have-6, did-3)
advmod(have-6, n't-4)
advmod(have-6, yet-5)
advcl:if(invalid-22, have-6)
obj(have-6, access-7)
case(vaccines-10, to-8)
det(vaccines-10, the-9)
nmod:to(access-7, vaccines-10)
advmod(have-6, then-11)
nmod:poss(argument-13, your-12)
nsubj(invalid-22, argument-13)
mark(vaccinated-17, for-14)
nsubj:pass(vaccinated-17, me-15)
nsubj:xsubj(save-19, me-15)
aux:pass(vaccinated-17, getting-16)
acl:for(argument-13, vaccinated-17)
mark(save-19, to-18)
xcomp(vaccinated-17, save-19)
obj(save-19, them-20)
cop(invalid-22, is-21)
punct(invalid-22, .-23)

Extracted the following NER entity mentions:

Sentence #11 (2 tokens):
4.

Tokens:
[Text=4 CharacterOffsetBegin=520 CharacterOffsetEnd=521 PartOfSpeech=LS Lemma=4 NamedEntityTag=NUMBER NormalizedNamedEntityTag=4.0]
[Text=. CharacterOffsetBegin=521 CharacterOffsetEnd=522 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (LST (LS 4) (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, 4-1)
punct(4-1, .-2)

Extracted the following NER entity mentions:
4	NUMBER	NUMBER:-1.0

Sentence #12 (33 tokens):
I understand how you'll now go on about herd immunity to save future grandparents from dying; which is an invalid point since there are so many cases in vaccinated people.

Tokens:
[Text=I CharacterOffsetBegin=523 CharacterOffsetEnd=524 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=understand CharacterOffsetBegin=525 CharacterOffsetEnd=535 PartOfSpeech=VBP Lemma=understand NamedEntityTag=O]
[Text=how CharacterOffsetBegin=536 CharacterOffsetEnd=539 PartOfSpeech=WRB Lemma=how NamedEntityTag=O]
[Text=you CharacterOffsetBegin=540 CharacterOffsetEnd=543 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text='ll CharacterOffsetBegin=543 CharacterOffsetEnd=546 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=now CharacterOffsetBegin=547 CharacterOffsetEnd=550 PartOfSpeech=RB Lemma=now NamedEntityTag=DATE NormalizedNamedEntityTag=PRESENT_REF Timex=<TIMEX3 tid="t1" type="DATE" value="PRESENT_REF">now</TIMEX3>]
[Text=go CharacterOffsetBegin=551 CharacterOffsetEnd=553 PartOfSpeech=VB Lemma=go NamedEntityTag=O]
[Text=on CharacterOffsetBegin=554 CharacterOffsetEnd=556 PartOfSpeech=IN Lemma=on NamedEntityTag=O]
[Text=about CharacterOffsetBegin=557 CharacterOffsetEnd=562 PartOfSpeech=IN Lemma=about NamedEntityTag=O]
[Text=herd CharacterOffsetBegin=563 CharacterOffsetEnd=567 PartOfSpeech=NN Lemma=herd NamedEntityTag=O]
[Text=immunity CharacterOffsetBegin=568 CharacterOffsetEnd=576 PartOfSpeech=NN Lemma=immunity NamedEntityTag=O]
[Text=to CharacterOffsetBegin=577 CharacterOffsetEnd=579 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=save CharacterOffsetBegin=580 CharacterOffsetEnd=584 PartOfSpeech=VB Lemma=save NamedEntityTag=O]
[Text=future CharacterOffsetBegin=585 CharacterOffsetEnd=591 PartOfSpeech=JJ Lemma=future NamedEntityTag=DATE NormalizedNamedEntityTag=FUTURE_REF Timex=<TIMEX3 tid="t2" type="DATE" value="FUTURE_REF">future</TIMEX3>]
[Text=grandparents CharacterOffsetBegin=592 CharacterOffsetEnd=604 PartOfSpeech=NNS Lemma=grandparent NamedEntityTag=O]
[Text=from CharacterOffsetBegin=605 CharacterOffsetEnd=609 PartOfSpeech=IN Lemma=from NamedEntityTag=O]
[Text=dying CharacterOffsetBegin=610 CharacterOffsetEnd=615 PartOfSpeech=VBG Lemma=die NamedEntityTag=O]
[Text=; CharacterOffsetBegin=615 CharacterOffsetEnd=616 PartOfSpeech=: Lemma=; NamedEntityTag=O]
[Text=which CharacterOffsetBegin=617 CharacterOffsetEnd=622 PartOfSpeech=WDT Lemma=which NamedEntityTag=O]
[Text=is CharacterOffsetBegin=623 CharacterOffsetEnd=625 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=an CharacterOffsetBegin=626 CharacterOffsetEnd=628 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=invalid CharacterOffsetBegin=629 CharacterOffsetEnd=636 PartOfSpeech=JJ Lemma=invalid NamedEntityTag=O]
[Text=point CharacterOffsetBegin=637 CharacterOffsetEnd=642 PartOfSpeech=NN Lemma=point NamedEntityTag=O]
[Text=since CharacterOffsetBegin=643 CharacterOffsetEnd=648 PartOfSpeech=IN Lemma=since NamedEntityTag=O]
[Text=there CharacterOffsetBegin=649 CharacterOffsetEnd=654 PartOfSpeech=EX Lemma=there NamedEntityTag=O]
[Text=are CharacterOffsetBegin=655 CharacterOffsetEnd=658 PartOfSpeech=VBP Lemma=be NamedEntityTag=O]
[Text=so CharacterOffsetBegin=659 CharacterOffsetEnd=661 PartOfSpeech=RB Lemma=so NamedEntityTag=O]
[Text=many CharacterOffsetBegin=662 CharacterOffsetEnd=666 PartOfSpeech=JJ Lemma=many NamedEntityTag=O]
[Text=cases CharacterOffsetBegin=667 CharacterOffsetEnd=672 PartOfSpeech=NNS Lemma=case NamedEntityTag=O]
[Text=in CharacterOffsetBegin=673 CharacterOffsetEnd=675 PartOfSpeech=IN Lemma=in NamedEntityTag=O]
[Text=vaccinated CharacterOffsetBegin=676 CharacterOffsetEnd=686 PartOfSpeech=VBN Lemma=vaccinate NamedEntityTag=O]
[Text=people CharacterOffsetBegin=687 CharacterOffsetEnd=693 PartOfSpeech=NNS Lemma=people NamedEntityTag=O]
[Text=. CharacterOffsetBegin=693 CharacterOffsetEnd=694 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (PRP I))
    (VP (VBP understand)
      (SBAR
        (WHADVP (WRB how))
        (S
          (NP (PRP you))
          (VP (MD 'll)
            (ADVP (RB now))
            (VP (VB go)
              (PP (IN on)
                (PP (IN about)
                  (NP (NN herd) (NN immunity))))
              (S
                (VP (TO to)
                  (VP (VB save)
                    (NP
                      (NP
                        (NP (JJ future) (NNS grandparents))
                        (PP (IN from)
                          (NP (VBG dying))))
                      (: ;)
                      (SBAR
                        (WHNP (WDT which))
                        (S
                          (VP (VBZ is)
                            (NP (DT an) (JJ invalid) (NN point))
                            (SBAR (IN since)
                              (S
                                (NP (EX there))
                                (VP (VBP are)
                                  (ADVP (RB so))
                                  (NP
                                    (NP (JJ many) (NNS cases))
                                    (PP (IN in)
                                      (NP (VBN vaccinated) (NNS people)))))))))))))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, understand-2)
nsubj(understand-2, I-1)
advmod(go-7, how-3)
nsubj(go-7, you-4)
nsubj:xsubj(save-13, you-4)
aux(go-7, 'll-5)
advmod(go-7, now-6)
ccomp(understand-2, go-7)
case(immunity-11, on-8)
case(immunity-11, about-9)
compound(immunity-11, herd-10)
obl:on(go-7, immunity-11)
mark(save-13, to-12)
xcomp(go-7, save-13)
amod(grandparents-15, future-14)
obj(save-13, grandparents-15)
nsubj(point-23, grandparents-15)
case(dying-17, from-16)
nmod:from(grandparents-15, dying-17)
punct(grandparents-15, ;-18)
ref(grandparents-15, which-19)
cop(point-23, is-20)
det(point-23, an-21)
amod(point-23, invalid-22)
acl:relcl(grandparents-15, point-23)
mark(are-26, since-24)
expl(are-26, there-25)
advcl:since(point-23, are-26)
advmod(are-26, so-27)
amod(cases-29, many-28)
nsubj(are-26, cases-29)
case(people-32, in-30)
amod(people-32, vaccinated-31)
nmod:in(cases-29, people-32)
punct(understand-2, .-33)

Extracted the following NER entity mentions:
now	DATE	DATE:-1.0
future	DATE	DATE:-1.0

Sentence #13 (2 tokens):
5.

Tokens:
[Text=5 CharacterOffsetBegin=695 CharacterOffsetEnd=696 PartOfSpeech=CD Lemma=5 NamedEntityTag=NUMBER NormalizedNamedEntityTag=5.0]
[Text=. CharacterOffsetBegin=696 CharacterOffsetEnd=697 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (NP (CD 5) (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, 5-1)
punct(5-1, .-2)

Extracted the following NER entity mentions:
5	NUMBER	NUMBER:-1.0

Sentence #14 (12 tokens):
Doctors and hospitals are healthcare industry; not statisticians and epidemiologists.

Tokens:
[Text=Doctors CharacterOffsetBegin=698 CharacterOffsetEnd=705 PartOfSpeech=NNS Lemma=doctor NamedEntityTag=O]
[Text=and CharacterOffsetBegin=706 CharacterOffsetEnd=709 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=hospitals CharacterOffsetBegin=710 CharacterOffsetEnd=719 PartOfSpeech=NNS Lemma=hospital NamedEntityTag=O]
[Text=are CharacterOffsetBegin=720 CharacterOffsetEnd=723 PartOfSpeech=VBP Lemma=be NamedEntityTag=O]
[Text=healthcare CharacterOffsetBegin=724 CharacterOffsetEnd=734 PartOfSpeech=NN Lemma=healthcare NamedEntityTag=O]
[Text=industry CharacterOffsetBegin=735 CharacterOffsetEnd=743 PartOfSpeech=NN Lemma=industry NamedEntityTag=O]
[Text=; CharacterOffsetBegin=743 CharacterOffsetEnd=744 PartOfSpeech=: Lemma=; NamedEntityTag=O]
[Text=not CharacterOffsetBegin=745 CharacterOffsetEnd=748 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
[Text=statisticians CharacterOffsetBegin=749 CharacterOffsetEnd=762 PartOfSpeech=NNS Lemma=statistician NamedEntityTag=O]
[Text=and CharacterOffsetBegin=763 CharacterOffsetEnd=766 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=epidemiologists CharacterOffsetBegin=767 CharacterOffsetEnd=782 PartOfSpeech=NNS Lemma=epidemiologist NamedEntityTag=O]
[Text=. CharacterOffsetBegin=782 CharacterOffsetEnd=783 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (NNS Doctors)
      (CC and)
      (NNS hospitals))
    (VP (VBP are)
      (NP
        (NP (NN healthcare) (NN industry))
        (: ;) (RB not)
        (NP (NNS statisticians)
          (CC and)
          (NNS epidemiologists))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, industry-6)
nsubj(industry-6, Doctors-1)
cc(hospitals-3, and-2)
conj:and(Doctors-1, hospitals-3)
nsubj(industry-6, hospitals-3)
cop(industry-6, are-4)
compound(industry-6, healthcare-5)
punct(industry-6, ;-7)
advmod(industry-6, not-8)
dep(industry-6, statisticians-9)
cc(epidemiologists-11, and-10)
dep(industry-6, epidemiologists-11)
conj:and(statisticians-9, epidemiologists-11)
punct(industry-6, .-12)

Extracted the following NER entity mentions:

Sentence #15 (39 tokens):
When you draw conclusions from the latter, you reach a far more realistic sense of the effectiveness of certain solutions to the problem at hand, and not just a reaction to the result of the problem.

Tokens:
[Text=When CharacterOffsetBegin=784 CharacterOffsetEnd=788 PartOfSpeech=WRB Lemma=when NamedEntityTag=O]
[Text=you CharacterOffsetBegin=789 CharacterOffsetEnd=792 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text=draw CharacterOffsetBegin=793 CharacterOffsetEnd=797 PartOfSpeech=VBP Lemma=draw NamedEntityTag=O]
[Text=conclusions CharacterOffsetBegin=798 CharacterOffsetEnd=809 PartOfSpeech=NNS Lemma=conclusion NamedEntityTag=O]
[Text=from CharacterOffsetBegin=810 CharacterOffsetEnd=814 PartOfSpeech=IN Lemma=from NamedEntityTag=O]
[Text=the CharacterOffsetBegin=815 CharacterOffsetEnd=818 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=latter CharacterOffsetBegin=819 CharacterOffsetEnd=825 PartOfSpeech=JJ Lemma=latter NamedEntityTag=O]
[Text=, CharacterOffsetBegin=825 CharacterOffsetEnd=826 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=you CharacterOffsetBegin=827 CharacterOffsetEnd=830 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text=reach CharacterOffsetBegin=831 CharacterOffsetEnd=836 PartOfSpeech=VBP Lemma=reach NamedEntityTag=O]
[Text=a CharacterOffsetBegin=837 CharacterOffsetEnd=838 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=far CharacterOffsetBegin=839 CharacterOffsetEnd=842 PartOfSpeech=RB Lemma=far NamedEntityTag=O]
[Text=more CharacterOffsetBegin=843 CharacterOffsetEnd=847 PartOfSpeech=RBR Lemma=more NamedEntityTag=O]
[Text=realistic CharacterOffsetBegin=848 CharacterOffsetEnd=857 PartOfSpeech=JJ Lemma=realistic NamedEntityTag=O]
[Text=sense CharacterOffsetBegin=858 CharacterOffsetEnd=863 PartOfSpeech=NN Lemma=sense NamedEntityTag=O]
[Text=of CharacterOffsetBegin=864 CharacterOffsetEnd=866 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=the CharacterOffsetBegin=867 CharacterOffsetEnd=870 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=effectiveness CharacterOffsetBegin=871 CharacterOffsetEnd=884 PartOfSpeech=NN Lemma=effectiveness NamedEntityTag=O]
[Text=of CharacterOffsetBegin=885 CharacterOffsetEnd=887 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=certain CharacterOffsetBegin=888 CharacterOffsetEnd=895 PartOfSpeech=JJ Lemma=certain NamedEntityTag=O]
[Text=solutions CharacterOffsetBegin=896 CharacterOffsetEnd=905 PartOfSpeech=NNS Lemma=solution NamedEntityTag=O]
[Text=to CharacterOffsetBegin=906 CharacterOffsetEnd=908 PartOfSpeech=IN Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=909 CharacterOffsetEnd=912 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=problem CharacterOffsetBegin=913 CharacterOffsetEnd=920 PartOfSpeech=NN Lemma=problem NamedEntityTag=O]
[Text=at CharacterOffsetBegin=921 CharacterOffsetEnd=923 PartOfSpeech=IN Lemma=at NamedEntityTag=O]
[Text=hand CharacterOffsetBegin=924 CharacterOffsetEnd=928 PartOfSpeech=NN Lemma=hand NamedEntityTag=O]
[Text=, CharacterOffsetBegin=928 CharacterOffsetEnd=929 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=and CharacterOffsetBegin=930 CharacterOffsetEnd=933 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=not CharacterOffsetBegin=934 CharacterOffsetEnd=937 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
[Text=just CharacterOffsetBegin=938 CharacterOffsetEnd=942 PartOfSpeech=RB Lemma=just NamedEntityTag=O]
[Text=a CharacterOffsetBegin=943 CharacterOffsetEnd=944 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=reaction CharacterOffsetBegin=945 CharacterOffsetEnd=953 PartOfSpeech=NN Lemma=reaction NamedEntityTag=O]
[Text=to CharacterOffsetBegin=954 CharacterOffsetEnd=956 PartOfSpeech=IN Lemma=to NamedEntityTag=O]
[Text=the CharacterOffsetBegin=957 CharacterOffsetEnd=960 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=result CharacterOffsetBegin=961 CharacterOffsetEnd=967 PartOfSpeech=NN Lemma=result NamedEntityTag=O]
[Text=of CharacterOffsetBegin=968 CharacterOffsetEnd=970 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=the CharacterOffsetBegin=971 CharacterOffsetEnd=974 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=problem CharacterOffsetBegin=975 CharacterOffsetEnd=982 PartOfSpeech=NN Lemma=problem NamedEntityTag=O]
[Text=. CharacterOffsetBegin=982 CharacterOffsetEnd=983 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (NP (PRP you))
        (VP (VBP draw)
          (NP (NNS conclusions))
          (PP (IN from)
            (NP (DT the) (JJ latter))))))
    (, ,)
    (NP (PRP you))
    (VP (VBP reach)
      (NP
        (NP (DT a)
          (ADJP
            (ADVP (RB far) (RBR more))
            (JJ realistic))
          (NN sense))
        (PP (IN of)
          (NP
            (NP (DT the) (NN effectiveness))
            (PP (IN of)
              (NP (JJ certain) (NNS solutions))))))
      (PP (IN to)
        (NP (DT the) (NN problem)))
      (PP (IN at)
        (NP (NN hand)))
      (, ,)
      (NAC (CC and)
        (RB not)
        (NP
          (NP (RB just) (DT a) (NN reaction))
          (PP (IN to)
            (NP
              (NP (DT the) (NN result))
              (PP (IN of)
                (NP (DT the) (NN problem))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, reach-10)
advmod(draw-3, When-1)
nsubj(draw-3, you-2)
advcl(reach-10, draw-3)
obj(draw-3, conclusions-4)
case(latter-7, from-5)
det(latter-7, the-6)
obl:from(draw-3, latter-7)
punct(reach-10, ,-8)
nsubj(reach-10, you-9)
det(sense-15, a-11)
advmod(more-13, far-12)
advmod(realistic-14, more-13)
amod(sense-15, realistic-14)
obj(reach-10, sense-15)
case(effectiveness-18, of-16)
det(effectiveness-18, the-17)
nmod:of(sense-15, effectiveness-18)
case(solutions-21, of-19)
amod(solutions-21, certain-20)
nmod:of(effectiveness-18, solutions-21)
case(problem-24, to-22)
det(problem-24, the-23)
obl:to(reach-10, problem-24)
case(hand-26, at-25)
obl:at(reach-10, hand-26)
punct(reach-10, ,-27)
cc(reaction-32, and-28)
dep(reaction-32, not-29)
advmod(reaction-32, just-30)
det(reaction-32, a-31)
dep(reach-10, reaction-32)
case(result-35, to-33)
det(result-35, the-34)
nmod:to(reaction-32, result-35)
case(problem-38, of-36)
det(problem-38, the-37)
nmod:of(result-35, problem-38)
punct(reach-10, .-39)

Extracted the following NER entity mentions:

Sentence #16 (4 tokens):
Edit: 6.

Tokens:
[Text=Edit CharacterOffsetBegin=985 CharacterOffsetEnd=989 PartOfSpeech=NN Lemma=edit NamedEntityTag=O]
[Text=: CharacterOffsetBegin=989 CharacterOffsetEnd=990 PartOfSpeech=: Lemma=: NamedEntityTag=O]
[Text=6 CharacterOffsetBegin=991 CharacterOffsetEnd=992 PartOfSpeech=CD Lemma=6 NamedEntityTag=NUMBER NormalizedNamedEntityTag=6.0]
[Text=. CharacterOffsetBegin=992 CharacterOffsetEnd=993 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (FRAG
    (NP (NN Edit))
    (: :)
    (NP (CD 6))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, Edit-1)
punct(Edit-1, :-2)
dep(Edit-1, 6-3)
punct(Edit-1, .-4)

Extracted the following NER entity mentions:
6	NUMBER	NUMBER:-1.0

Sentence #17 (34 tokens):
If you're tired if the pandemic then pretend like it doesn't exist (or stop blowing it out of proportion) and encourage your politicians to adopt that approach as well.

Tokens:
[Text=If CharacterOffsetBegin=994 CharacterOffsetEnd=996 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=you CharacterOffsetBegin=997 CharacterOffsetEnd=1000 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text='re CharacterOffsetBegin=1000 CharacterOffsetEnd=1003 PartOfSpeech=VBP Lemma=be NamedEntityTag=O]
[Text=tired CharacterOffsetBegin=1004 CharacterOffsetEnd=1009 PartOfSpeech=JJ Lemma=tired NamedEntityTag=O]
[Text=if CharacterOffsetBegin=1010 CharacterOffsetEnd=1012 PartOfSpeech=IN Lemma=if NamedEntityTag=O]
[Text=the CharacterOffsetBegin=1013 CharacterOffsetEnd=1016 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=pandemic CharacterOffsetBegin=1017 CharacterOffsetEnd=1025 PartOfSpeech=NN Lemma=pandemic NamedEntityTag=O]
[Text=then CharacterOffsetBegin=1026 CharacterOffsetEnd=1030 PartOfSpeech=RB Lemma=then NamedEntityTag=O]
[Text=pretend CharacterOffsetBegin=1031 CharacterOffsetEnd=1038 PartOfSpeech=VBP Lemma=pretend NamedEntityTag=O]
[Text=like CharacterOffsetBegin=1039 CharacterOffsetEnd=1043 PartOfSpeech=IN Lemma=like NamedEntityTag=O]
[Text=it CharacterOffsetBegin=1044 CharacterOffsetEnd=1046 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=does CharacterOffsetBegin=1047 CharacterOffsetEnd=1051 PartOfSpeech=VBZ Lemma=do NamedEntityTag=O]
[Text=n't CharacterOffsetBegin=1051 CharacterOffsetEnd=1054 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
[Text=exist CharacterOffsetBegin=1055 CharacterOffsetEnd=1060 PartOfSpeech=VB Lemma=exist NamedEntityTag=O]
[Text=( CharacterOffsetBegin=1061 CharacterOffsetEnd=1062 PartOfSpeech=-LRB- Lemma=( NamedEntityTag=O]
[Text=or CharacterOffsetBegin=1062 CharacterOffsetEnd=1064 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=stop CharacterOffsetBegin=1065 CharacterOffsetEnd=1069 PartOfSpeech=VB Lemma=stop NamedEntityTag=O]
[Text=blowing CharacterOffsetBegin=1070 CharacterOffsetEnd=1077 PartOfSpeech=VBG Lemma=blow NamedEntityTag=O]
[Text=it CharacterOffsetBegin=1078 CharacterOffsetEnd=1080 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=out CharacterOffsetBegin=1081 CharacterOffsetEnd=1084 PartOfSpeech=IN Lemma=out NamedEntityTag=O]
[Text=of CharacterOffsetBegin=1085 CharacterOffsetEnd=1087 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=proportion CharacterOffsetBegin=1088 CharacterOffsetEnd=1098 PartOfSpeech=NN Lemma=proportion NamedEntityTag=O]
[Text=) CharacterOffsetBegin=1098 CharacterOffsetEnd=1099 PartOfSpeech=-RRB- Lemma=) NamedEntityTag=O]
[Text=and CharacterOffsetBegin=1100 CharacterOffsetEnd=1103 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=encourage CharacterOffsetBegin=1104 CharacterOffsetEnd=1113 PartOfSpeech=VB Lemma=encourage NamedEntityTag=O]
[Text=your CharacterOffsetBegin=1114 CharacterOffsetEnd=1118 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O]
[Text=politicians CharacterOffsetBegin=1119 CharacterOffsetEnd=1130 PartOfSpeech=NNS Lemma=politician NamedEntityTag=O]
[Text=to CharacterOffsetBegin=1131 CharacterOffsetEnd=1133 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=adopt CharacterOffsetBegin=1134 CharacterOffsetEnd=1139 PartOfSpeech=VB Lemma=adopt NamedEntityTag=O]
[Text=that CharacterOffsetBegin=1140 CharacterOffsetEnd=1144 PartOfSpeech=DT Lemma=that NamedEntityTag=O]
[Text=approach CharacterOffsetBegin=1145 CharacterOffsetEnd=1153 PartOfSpeech=NN Lemma=approach NamedEntityTag=O]
[Text=as CharacterOffsetBegin=1154 CharacterOffsetEnd=1156 PartOfSpeech=RB Lemma=as NamedEntityTag=O]
[Text=well CharacterOffsetBegin=1157 CharacterOffsetEnd=1161 PartOfSpeech=RB Lemma=well NamedEntityTag=O]
[Text=. CharacterOffsetBegin=1161 CharacterOffsetEnd=1162 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP (VBP 're)
          (ADJP (JJ tired)
            (SBAR (IN if)
              (S
                (NP (DT the) (NN pandemic))
                (ADVP (RB then))
                (VP (VBP pretend)
                  (PP (IN like)
                    (NP (PRP it))))))))))
    (VP (VBZ does) (RB n't)
      (VP
        (VP (VB exist))
        (-LRB- -LRB-)
        (CC or)
        (VP (VB stop)
          (S
            (VP (VBG blowing)
              (NP (PRP it))
              (PP (IN out)
                (PP (IN of)
                  (NP (NN proportion)))))))
        (-RRB- -RRB-)
        (CC and)
        (VP (VB encourage)
          (NP (PRP$ your) (NNS politicians))
          (S
            (VP (TO to)
              (VP (VB adopt)
                (NP (DT that) (NN approach))
                (ADVP (RB as) (RB well))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, exist-14)
mark(tired-4, If-1)
nsubj(tired-4, you-2)
cop(tired-4, 're-3)
csubj(exist-14, tired-4)
csubj(stop-17, tired-4)
csubj(encourage-25, tired-4)
mark(pretend-9, if-5)
det(pandemic-7, the-6)
nsubj(pretend-9, pandemic-7)
advmod(pretend-9, then-8)
ccomp(tired-4, pretend-9)
case(it-11, like-10)
obl:like(pretend-9, it-11)
aux(exist-14, does-12)
advmod(exist-14, n't-13)
punct(exist-14, (-15)
cc(stop-17, or-16)
conj:or(exist-14, stop-17)
xcomp(stop-17, blowing-18)
obj(blowing-18, it-19)
case(proportion-22, out-20)
fixed(out-20, of-21)
obl:out_of(blowing-18, proportion-22)
punct(exist-14, )-23)
cc(encourage-25, and-24)
conj:and(exist-14, encourage-25)
nmod:poss(politicians-27, your-26)
obj(encourage-25, politicians-27)
nsubj:xsubj(adopt-29, politicians-27)
mark(adopt-29, to-28)
xcomp(encourage-25, adopt-29)
det(approach-31, that-30)
obj(adopt-29, approach-31)
advmod(adopt-29, as-32)
fixed(as-32, well-33)
punct(exist-14, .-34)

Extracted the following NER entity mentions:

Sentence #18 (8 tokens):
Vaccinate at risk people, and leave.

Tokens:
[Text=Vaccinate CharacterOffsetBegin=1163 CharacterOffsetEnd=1172 PartOfSpeech=VB Lemma=vaccinate NamedEntityTag=O]
[Text=at CharacterOffsetBegin=1173 CharacterOffsetEnd=1175 PartOfSpeech=IN Lemma=at NamedEntityTag=O]
[Text=risk CharacterOffsetBegin=1176 CharacterOffsetEnd=1180 PartOfSpeech=NN Lemma=risk NamedEntityTag=O]
[Text=people CharacterOffsetBegin=1181 CharacterOffsetEnd=1187 PartOfSpeech=NNS Lemma=people NamedEntityTag=O]
[Text=, CharacterOffsetBegin=1187 CharacterOffsetEnd=1188 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=and CharacterOffsetBegin=1189 CharacterOffsetEnd=1192 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=leave CharacterOffsetBegin=1193 CharacterOffsetEnd=1198 PartOfSpeech=VB Lemma=leave NamedEntityTag=O]
[Text=. CharacterOffsetBegin=1198 CharacterOffsetEnd=1199 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (VP
      (VP (VB Vaccinate)
        (PP (IN at)
          (NP (NN risk) (NNS people))))
      (, ,)
      (CC and)
      (VP (VB leave)))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, Vaccinate-1)
case(people-4, at-2)
compound(people-4, risk-3)
obl:at(Vaccinate-1, people-4)
punct(Vaccinate-1, ,-5)
cc(leave-7, and-6)
conj:and(Vaccinate-1, leave-7)
punct(Vaccinate-1, .-8)

Extracted the following NER entity mentions:

Sentence #19 (2 tokens):
it.

Tokens:
[Text=it CharacterOffsetBegin=1200 CharacterOffsetEnd=1202 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=. CharacterOffsetBegin=1202 CharacterOffsetEnd=1203 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (PRP it))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, it-1)
punct(it-1, .-2)

Extracted the following NER entity mentions:

Sentence #20 (2 tokens):
at.

Tokens:
[Text=at CharacterOffsetBegin=1204 CharacterOffsetEnd=1206 PartOfSpeech=IN Lemma=at NamedEntityTag=O]
[Text=. CharacterOffsetBegin=1206 CharacterOffsetEnd=1207 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (FRAG (IN at) (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, at-1)
punct(at-1, .-2)

Extracted the following NER entity mentions:

Sentence #21 (2 tokens):
that.

Tokens:
[Text=that CharacterOffsetBegin=1208 CharacterOffsetEnd=1212 PartOfSpeech=DT Lemma=that NamedEntityTag=O]
[Text=. CharacterOffsetBegin=1212 CharacterOffsetEnd=1213 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (DT that))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, that-1)
punct(that-1, .-2)

Extracted the following NER entity mentions:
