Document: ID=70CBFCA9.text (3 sentences, 42 tokens)

Sentence #1 (18 tokens):
I’m an airline pilot and I’m not vaxxed as my airline doesn’t require it.

Tokens:
[Text=I CharacterOffsetBegin=0 CharacterOffsetEnd=1 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=’m CharacterOffsetBegin=1 CharacterOffsetEnd=3 PartOfSpeech=VBP Lemma=’m NamedEntityTag=O]
[Text=an CharacterOffsetBegin=4 CharacterOffsetEnd=6 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=airline CharacterOffsetBegin=7 CharacterOffsetEnd=14 PartOfSpeech=NN Lemma=airline NamedEntityTag=O]
[Text=pilot CharacterOffsetBegin=15 CharacterOffsetEnd=20 PartOfSpeech=NN Lemma=pilot NamedEntityTag=TITLE]
[Text=and CharacterOffsetBegin=21 CharacterOffsetEnd=24 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=I CharacterOffsetBegin=25 CharacterOffsetEnd=26 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=’m CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=VBP Lemma=’m NamedEntityTag=O]
[Text=not CharacterOffsetBegin=29 CharacterOffsetEnd=32 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
[Text=vaxxed CharacterOffsetBegin=33 CharacterOffsetEnd=39 PartOfSpeech=VBN Lemma=vaxx NamedEntityTag=O]
[Text=as CharacterOffsetBegin=40 CharacterOffsetEnd=42 PartOfSpeech=IN Lemma=as NamedEntityTag=O]
[Text=my CharacterOffsetBegin=43 CharacterOffsetEnd=45 PartOfSpeech=PRP$ Lemma=my NamedEntityTag=O]
[Text=airline CharacterOffsetBegin=46 CharacterOffsetEnd=53 PartOfSpeech=NN Lemma=airline NamedEntityTag=O]
[Text=does CharacterOffsetBegin=54 CharacterOffsetEnd=58 PartOfSpeech=VBZ Lemma=do NamedEntityTag=O]
[Text=n’t CharacterOffsetBegin=58 CharacterOffsetEnd=61 PartOfSpeech=RB Lemma=n’t NamedEntityTag=O]
[Text=require CharacterOffsetBegin=62 CharacterOffsetEnd=69 PartOfSpeech=VB Lemma=require NamedEntityTag=O]
[Text=it CharacterOffsetBegin=70 CharacterOffsetEnd=72 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=. CharacterOffsetBegin=72 CharacterOffsetEnd=73 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (S
      (NP (PRP I))
      (VP (VBP ’m)
        (NP (DT an) (NN airline) (NN pilot))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP ’m) (RB not)
        (VP (VBN vaxxed)
          (SBAR (IN as)
            (S
              (NP (PRP$ my) (NN airline))
              (VP (VBZ does) (RB n’t)
                (VP (VB require)
                  (NP (PRP it)))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, pilot-5)
nsubj(pilot-5, I-1)
cop(pilot-5, ’m-2)
det(pilot-5, an-3)
compound(pilot-5, airline-4)
cc(vaxxed-10, and-6)
nsubj:pass(vaxxed-10, I-7)
aux:pass(vaxxed-10, ’m-8)
advmod(vaxxed-10, not-9)
conj:and(pilot-5, vaxxed-10)
mark(require-16, as-11)
nmod:poss(airline-13, my-12)
nsubj(require-16, airline-13)
aux(require-16, does-14)
advmod(require-16, n’t-15)
advcl:as(vaxxed-10, require-16)
obj(require-16, it-17)
punct(pilot-5, .-18)

Extracted the following NER entity mentions:
pilot	TITLE	-

Sentence #2 (23 tokens):
The Canadian mandate applies to foreign air crews too though and I’m worried that my airline will make me get vaxxed.

Tokens:
[Text=The CharacterOffsetBegin=74 CharacterOffsetEnd=77 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=Canadian CharacterOffsetBegin=78 CharacterOffsetEnd=86 PartOfSpeech=JJ Lemma=canadian NamedEntityTag=NATIONALITY]
[Text=mandate CharacterOffsetBegin=87 CharacterOffsetEnd=94 PartOfSpeech=NN Lemma=mandate NamedEntityTag=O]
[Text=applies CharacterOffsetBegin=95 CharacterOffsetEnd=102 PartOfSpeech=VBZ Lemma=apply NamedEntityTag=O]
[Text=to CharacterOffsetBegin=103 CharacterOffsetEnd=105 PartOfSpeech=IN Lemma=to NamedEntityTag=O]
[Text=foreign CharacterOffsetBegin=106 CharacterOffsetEnd=113 PartOfSpeech=JJ Lemma=foreign NamedEntityTag=O]
[Text=air CharacterOffsetBegin=114 CharacterOffsetEnd=117 PartOfSpeech=NN Lemma=air NamedEntityTag=O]
[Text=crews CharacterOffsetBegin=118 CharacterOffsetEnd=123 PartOfSpeech=NNS Lemma=crew NamedEntityTag=O]
[Text=too CharacterOffsetBegin=124 CharacterOffsetEnd=127 PartOfSpeech=RB Lemma=too NamedEntityTag=O]
[Text=though CharacterOffsetBegin=128 CharacterOffsetEnd=134 PartOfSpeech=RB Lemma=though NamedEntityTag=O]
[Text=and CharacterOffsetBegin=135 CharacterOffsetEnd=138 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=I CharacterOffsetBegin=139 CharacterOffsetEnd=140 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=’m CharacterOffsetBegin=140 CharacterOffsetEnd=142 PartOfSpeech=VBP Lemma=’m NamedEntityTag=O]
[Text=worried CharacterOffsetBegin=143 CharacterOffsetEnd=150 PartOfSpeech=JJ Lemma=worried NamedEntityTag=O]
[Text=that CharacterOffsetBegin=151 CharacterOffsetEnd=155 PartOfSpeech=IN Lemma=that NamedEntityTag=O]
[Text=my CharacterOffsetBegin=156 CharacterOffsetEnd=158 PartOfSpeech=PRP$ Lemma=my NamedEntityTag=O]
[Text=airline CharacterOffsetBegin=159 CharacterOffsetEnd=166 PartOfSpeech=NN Lemma=airline NamedEntityTag=O]
[Text=will CharacterOffsetBegin=167 CharacterOffsetEnd=171 PartOfSpeech=MD Lemma=will NamedEntityTag=O]
[Text=make CharacterOffsetBegin=172 CharacterOffsetEnd=176 PartOfSpeech=VB Lemma=make NamedEntityTag=O]
[Text=me CharacterOffsetBegin=177 CharacterOffsetEnd=179 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=get CharacterOffsetBegin=180 CharacterOffsetEnd=183 PartOfSpeech=VB Lemma=get NamedEntityTag=O]
[Text=vaxxed CharacterOffsetBegin=184 CharacterOffsetEnd=190 PartOfSpeech=VBN Lemma=vaxx NamedEntityTag=O]
[Text=. CharacterOffsetBegin=190 CharacterOffsetEnd=191 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (S
      (NP (DT The) (JJ Canadian) (NN mandate))
      (VP (VBZ applies)
        (PP (IN to)
          (NP
            (NML (JJ foreign) (NN air))
            (NNS crews)))
        (ADVP (RB too))
        (ADVP (RB though))))
    (CC and)
    (S
      (NP (PRP I))
      (VP (VBP ’m)
        (ADJP (JJ worried))
        (SBAR (IN that)
          (S
            (NP (PRP$ my) (NN airline))
            (VP (MD will)
              (VP (VB make)
                (S
                  (NP (PRP me))
                  (VP (VB get)
                    (VP (VBN vaxxed))))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, applies-4)
det(mandate-3, The-1)
amod(mandate-3, Canadian-2)
nsubj(applies-4, mandate-3)
case(crews-8, to-5)
amod(air-7, foreign-6)
compound(crews-8, air-7)
obl:to(applies-4, crews-8)
advmod(applies-4, too-9)
advmod(applies-4, though-10)
cc(worried-14, and-11)
nsubj(worried-14, I-12)
cop(worried-14, ’m-13)
conj:and(applies-4, worried-14)
mark(make-19, that-15)
nmod:poss(airline-17, my-16)
nsubj(make-19, airline-17)
aux(make-19, will-18)
ccomp(worried-14, make-19)
nsubj:pass(vaxxed-22, me-20)
aux:pass(vaxxed-22, get-21)
ccomp(make-19, vaxxed-22)
punct(applies-4, .-23)

Extracted the following NER entity mentions:
Canadian	NATIONALITY	MISC:0.999999127035875

Sentence #3 (1 tokens):
Sad

Tokens:
[Text=Sad CharacterOffsetBegin=192 CharacterOffsetEnd=195 PartOfSpeech=JJ Lemma=sad NamedEntityTag=O]

Constituency parse: 
(ROOT
  (ADJP (JJ Sad)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, Sad-1)

Extracted the following NER entity mentions:
