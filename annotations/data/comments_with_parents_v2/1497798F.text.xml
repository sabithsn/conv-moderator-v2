Document: ID=1497798F.text (6 sentences, 68 tokens)

Sentence #1 (10 tokens):
Write out what the nature of the strawman is.

Tokens:
[Text=Write CharacterOffsetBegin=0 CharacterOffsetEnd=5 PartOfSpeech=VB Lemma=write NamedEntityTag=O]
[Text=out CharacterOffsetBegin=6 CharacterOffsetEnd=9 PartOfSpeech=RP Lemma=out NamedEntityTag=O]
[Text=what CharacterOffsetBegin=10 CharacterOffsetEnd=14 PartOfSpeech=WP Lemma=what NamedEntityTag=O]
[Text=the CharacterOffsetBegin=15 CharacterOffsetEnd=18 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=nature CharacterOffsetBegin=19 CharacterOffsetEnd=25 PartOfSpeech=NN Lemma=nature NamedEntityTag=O]
[Text=of CharacterOffsetBegin=26 CharacterOffsetEnd=28 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=the CharacterOffsetBegin=29 CharacterOffsetEnd=32 PartOfSpeech=DT Lemma=the NamedEntityTag=O]
[Text=strawman CharacterOffsetBegin=33 CharacterOffsetEnd=41 PartOfSpeech=NN Lemma=strawman NamedEntityTag=O]
[Text=is CharacterOffsetBegin=42 CharacterOffsetEnd=44 PartOfSpeech=VBZ Lemma=be NamedEntityTag=O]
[Text=. CharacterOffsetBegin=44 CharacterOffsetEnd=45 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (VP (VB Write)
      (PRT (RP out))
      (SBAR
        (WHNP (WP what))
        (S
          (NP
            (NP (DT the) (NN nature))
            (PP (IN of)
              (NP (DT the) (NN strawman))))
          (VP (VBZ is)))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, Write-1)
compound:prt(Write-1, out-2)
obj(is-9, what-3)
det(nature-5, the-4)
nsubj(is-9, nature-5)
case(strawman-8, of-6)
det(strawman-8, the-7)
nmod:of(nature-5, strawman-8)
ccomp(Write-1, is-9)
punct(Write-1, .-10)

Extracted the following NER entity mentions:

Sentence #2 (4 tokens):
You can't.

Tokens:
[Text=You CharacterOffsetBegin=46 CharacterOffsetEnd=49 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text=ca CharacterOffsetBegin=50 CharacterOffsetEnd=52 PartOfSpeech=MD Lemma=can NamedEntityTag=O]
[Text=n't CharacterOffsetBegin=52 CharacterOffsetEnd=55 PartOfSpeech=RB Lemma=not NamedEntityTag=O]
[Text=. CharacterOffsetBegin=55 CharacterOffsetEnd=56 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (PRP You))
    (VP (MD ca) (RB n't))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, ca-2)
nsubj(ca-2, You-1)
advmod(ca-2, n't-3)
punct(ca-2, .-4)

Extracted the following NER entity mentions:

Sentence #3 (9 tokens):
I simply rephrased your argument with full definitions.

Tokens:
[Text=I CharacterOffsetBegin=59 CharacterOffsetEnd=60 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text=simply CharacterOffsetBegin=61 CharacterOffsetEnd=67 PartOfSpeech=RB Lemma=simply NamedEntityTag=O]
[Text=rephrased CharacterOffsetBegin=68 CharacterOffsetEnd=77 PartOfSpeech=VBD Lemma=rephrase NamedEntityTag=O]
[Text=your CharacterOffsetBegin=78 CharacterOffsetEnd=82 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O]
[Text=argument CharacterOffsetBegin=83 CharacterOffsetEnd=91 PartOfSpeech=NN Lemma=argument NamedEntityTag=O]
[Text=with CharacterOffsetBegin=92 CharacterOffsetEnd=96 PartOfSpeech=IN Lemma=with NamedEntityTag=O]
[Text=full CharacterOffsetBegin=97 CharacterOffsetEnd=101 PartOfSpeech=JJ Lemma=full NamedEntityTag=O]
[Text=definitions CharacterOffsetBegin=102 CharacterOffsetEnd=113 PartOfSpeech=NNS Lemma=definition NamedEntityTag=O]
[Text=. CharacterOffsetBegin=113 CharacterOffsetEnd=114 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (PRP I))
    (ADVP (RB simply))
    (VP (VBD rephrased)
      (NP (PRP$ your) (NN argument))
      (PP (IN with)
        (NP (JJ full) (NNS definitions))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, rephrased-3)
nsubj(rephrased-3, I-1)
advmod(rephrased-3, simply-2)
nmod:poss(argument-5, your-4)
obj(rephrased-3, argument-5)
case(definitions-8, with-6)
amod(definitions-8, full-7)
obl:with(rephrased-3, definitions-8)
punct(rephrased-3, .-9)

Extracted the following NER entity mentions:

Sentence #4 (6 tokens):
You sound like a wamman.

Tokens:
[Text=You CharacterOffsetBegin=115 CharacterOffsetEnd=118 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text=sound CharacterOffsetBegin=119 CharacterOffsetEnd=124 PartOfSpeech=VBP Lemma=sound NamedEntityTag=O]
[Text=like CharacterOffsetBegin=125 CharacterOffsetEnd=129 PartOfSpeech=IN Lemma=like NamedEntityTag=O]
[Text=a CharacterOffsetBegin=130 CharacterOffsetEnd=131 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=wamman CharacterOffsetBegin=132 CharacterOffsetEnd=138 PartOfSpeech=NN Lemma=wamman NamedEntityTag=O]
[Text=. CharacterOffsetBegin=138 CharacterOffsetEnd=139 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (NP (PRP You))
    (VP (VBP sound)
      (PP (IN like)
        (NP (DT a) (NN wamman))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, sound-2)
nsubj(sound-2, You-1)
case(wamman-5, like-3)
det(wamman-5, a-4)
obl:like(sound-2, wamman-5)
punct(sound-2, .-6)

Extracted the following NER entity mentions:

Sentence #5 (31 tokens):
You've stopped even trying to defend your argument, and instead claim I'm misrepresenting your very broad statement, yet you refuse to narrow it or clarify it.

Tokens:
[Text=You CharacterOffsetBegin=141 CharacterOffsetEnd=144 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text='ve CharacterOffsetBegin=144 CharacterOffsetEnd=147 PartOfSpeech=VBP Lemma=have NamedEntityTag=O]
[Text=stopped CharacterOffsetBegin=148 CharacterOffsetEnd=155 PartOfSpeech=VBN Lemma=stop NamedEntityTag=O]
[Text=even CharacterOffsetBegin=156 CharacterOffsetEnd=160 PartOfSpeech=RB Lemma=even NamedEntityTag=O]
[Text=trying CharacterOffsetBegin=161 CharacterOffsetEnd=167 PartOfSpeech=VBG Lemma=try NamedEntityTag=O]
[Text=to CharacterOffsetBegin=168 CharacterOffsetEnd=170 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=defend CharacterOffsetBegin=171 CharacterOffsetEnd=177 PartOfSpeech=VB Lemma=defend NamedEntityTag=O]
[Text=your CharacterOffsetBegin=178 CharacterOffsetEnd=182 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O]
[Text=argument CharacterOffsetBegin=183 CharacterOffsetEnd=191 PartOfSpeech=NN Lemma=argument NamedEntityTag=O]
[Text=, CharacterOffsetBegin=191 CharacterOffsetEnd=192 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=and CharacterOffsetBegin=193 CharacterOffsetEnd=196 PartOfSpeech=CC Lemma=and NamedEntityTag=O]
[Text=instead CharacterOffsetBegin=197 CharacterOffsetEnd=204 PartOfSpeech=RB Lemma=instead NamedEntityTag=O]
[Text=claim CharacterOffsetBegin=205 CharacterOffsetEnd=210 PartOfSpeech=VBP Lemma=claim NamedEntityTag=O]
[Text=I CharacterOffsetBegin=211 CharacterOffsetEnd=212 PartOfSpeech=PRP Lemma=I NamedEntityTag=O]
[Text='m CharacterOffsetBegin=212 CharacterOffsetEnd=214 PartOfSpeech=VBP Lemma=be NamedEntityTag=O]
[Text=misrepresenting CharacterOffsetBegin=215 CharacterOffsetEnd=230 PartOfSpeech=VBG Lemma=misrepresent NamedEntityTag=O]
[Text=your CharacterOffsetBegin=231 CharacterOffsetEnd=235 PartOfSpeech=PRP$ Lemma=you NamedEntityTag=O]
[Text=very CharacterOffsetBegin=236 CharacterOffsetEnd=240 PartOfSpeech=RB Lemma=very NamedEntityTag=O]
[Text=broad CharacterOffsetBegin=241 CharacterOffsetEnd=246 PartOfSpeech=JJ Lemma=broad NamedEntityTag=O]
[Text=statement CharacterOffsetBegin=247 CharacterOffsetEnd=256 PartOfSpeech=NN Lemma=statement NamedEntityTag=O]
[Text=, CharacterOffsetBegin=256 CharacterOffsetEnd=257 PartOfSpeech=, Lemma=, NamedEntityTag=O]
[Text=yet CharacterOffsetBegin=258 CharacterOffsetEnd=261 PartOfSpeech=CC Lemma=yet NamedEntityTag=O]
[Text=you CharacterOffsetBegin=262 CharacterOffsetEnd=265 PartOfSpeech=PRP Lemma=you NamedEntityTag=O]
[Text=refuse CharacterOffsetBegin=266 CharacterOffsetEnd=272 PartOfSpeech=VBP Lemma=refuse NamedEntityTag=O]
[Text=to CharacterOffsetBegin=273 CharacterOffsetEnd=275 PartOfSpeech=TO Lemma=to NamedEntityTag=O]
[Text=narrow CharacterOffsetBegin=276 CharacterOffsetEnd=282 PartOfSpeech=VB Lemma=narrow NamedEntityTag=O]
[Text=it CharacterOffsetBegin=283 CharacterOffsetEnd=285 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=or CharacterOffsetBegin=286 CharacterOffsetEnd=288 PartOfSpeech=CC Lemma=or NamedEntityTag=O]
[Text=clarify CharacterOffsetBegin=289 CharacterOffsetEnd=296 PartOfSpeech=VB Lemma=clarify NamedEntityTag=O]
[Text=it CharacterOffsetBegin=297 CharacterOffsetEnd=299 PartOfSpeech=PRP Lemma=it NamedEntityTag=O]
[Text=. CharacterOffsetBegin=299 CharacterOffsetEnd=300 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (S
    (S
      (NP (PRP You))
      (VP (VBP 've)
        (VP (VBN stopped)
          (S
            (S
              (ADVP (RB even))
              (VP (VBG trying)
                (S
                  (VP (TO to)
                    (VP (VB defend)
                      (NP (PRP$ your) (NN argument)))))))
            (, ,)
            (CC and)
            (S
              (ADVP (RB instead))
              (VP (VBP claim)
                (SBAR
                  (S
                    (NP (PRP I))
                    (VP (VBP 'm)
                      (VP (VBG misrepresenting)
                        (NP (PRP$ your)
                          (ADJP (RB very) (JJ broad))
                          (NN statement))))))))))))
    (, ,)
    (CC yet)
    (S
      (NP (PRP you))
      (VP (VBP refuse)
        (S
          (VP (TO to)
            (VP
              (VP (VB narrow)
                (NP (PRP it)))
              (CC or)
              (VP (VB clarify)
                (NP (PRP it))))))))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, stopped-3)
nsubj(stopped-3, You-1)
aux(stopped-3, 've-2)
advmod(trying-5, even-4)
xcomp(stopped-3, trying-5)
mark(defend-7, to-6)
xcomp(trying-5, defend-7)
nmod:poss(argument-9, your-8)
obj(defend-7, argument-9)
punct(trying-5, ,-10)
cc(claim-13, and-11)
advmod(claim-13, instead-12)
xcomp(stopped-3, claim-13)
conj:and(trying-5, claim-13)
nsubj(misrepresenting-16, I-14)
aux(misrepresenting-16, 'm-15)
ccomp(claim-13, misrepresenting-16)
nmod:poss(statement-20, your-17)
advmod(broad-19, very-18)
amod(statement-20, broad-19)
obj(misrepresenting-16, statement-20)
punct(stopped-3, ,-21)
cc(refuse-24, yet-22)
nsubj(refuse-24, you-23)
nsubj:xsubj(narrow-26, you-23)
nsubj:xsubj(clarify-29, you-23)
conj:yet(stopped-3, refuse-24)
mark(narrow-26, to-25)
xcomp(refuse-24, narrow-26)
obj(narrow-26, it-27)
cc(clarify-29, or-28)
xcomp(refuse-24, clarify-29)
conj:or(narrow-26, clarify-29)
obj(clarify-29, it-30)
punct(stopped-3, .-31)

Extracted the following NER entity mentions:

Sentence #6 (8 tokens):
Classic pathology of a sociopathic reddit mod.

Tokens:
[Text=Classic CharacterOffsetBegin=303 CharacterOffsetEnd=310 PartOfSpeech=NNP Lemma=Classic NamedEntityTag=O]
[Text=pathology CharacterOffsetBegin=311 CharacterOffsetEnd=320 PartOfSpeech=NN Lemma=pathology NamedEntityTag=O]
[Text=of CharacterOffsetBegin=321 CharacterOffsetEnd=323 PartOfSpeech=IN Lemma=of NamedEntityTag=O]
[Text=a CharacterOffsetBegin=324 CharacterOffsetEnd=325 PartOfSpeech=DT Lemma=a NamedEntityTag=O]
[Text=sociopathic CharacterOffsetBegin=326 CharacterOffsetEnd=337 PartOfSpeech=JJ Lemma=sociopathic NamedEntityTag=O]
[Text=reddit CharacterOffsetBegin=338 CharacterOffsetEnd=344 PartOfSpeech=NN Lemma=reddit NamedEntityTag=O]
[Text=mod CharacterOffsetBegin=345 CharacterOffsetEnd=348 PartOfSpeech=NNP Lemma=mod NamedEntityTag=O]
[Text=. CharacterOffsetBegin=348 CharacterOffsetEnd=349 PartOfSpeech=. Lemma=. NamedEntityTag=O]

Constituency parse: 
(ROOT
  (FRAG
    (NP
      (NP (NNP Classic) (NN pathology))
      (PP (IN of)
        (NP (DT a) (JJ sociopathic) (NN reddit))))
    (NP (NNP mod))
    (. .)))


Dependency Parse (enhanced plus plus dependencies):
root(ROOT-0, pathology-2)
compound(pathology-2, Classic-1)
case(reddit-6, of-3)
det(reddit-6, a-4)
amod(reddit-6, sociopathic-5)
nmod:of(pathology-2, reddit-6)
dep(pathology-2, mod-7)
punct(pathology-2, .-8)

Extracted the following NER entity mentions:
