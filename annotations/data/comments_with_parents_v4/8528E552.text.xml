<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="CoreNLP-to-HTML.xsl" type="text/xsl"?>
<root>
  <document>
    <docId>8528E552.text</docId>
    <sentences>
      <sentence id="1">
        <tokens>
          <token id="1">
            <word>Do</word>
            <lemma>do</lemma>
            <CharacterOffsetBegin>0</CharacterOffsetBegin>
            <CharacterOffsetEnd>2</CharacterOffsetEnd>
            <POS>VBP</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>you</word>
            <lemma>you</lemma>
            <CharacterOffsetBegin>3</CharacterOffsetBegin>
            <CharacterOffsetEnd>6</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
          </token>
          <token id="3">
            <word>walk</word>
            <lemma>walk</lemma>
            <CharacterOffsetBegin>7</CharacterOffsetBegin>
            <CharacterOffsetEnd>11</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
          </token>
          <token id="4">
            <word>around</word>
            <lemma>around</lemma>
            <CharacterOffsetBegin>12</CharacterOffsetBegin>
            <CharacterOffsetEnd>18</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
          </token>
          <token id="5">
            <word>in</word>
            <lemma>in</lemma>
            <CharacterOffsetBegin>19</CharacterOffsetBegin>
            <CharacterOffsetEnd>21</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="6">
            <word>real</word>
            <lemma>real</lemma>
            <CharacterOffsetBegin>22</CharacterOffsetBegin>
            <CharacterOffsetEnd>26</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
          </token>
          <token id="7">
            <word>life</word>
            <lemma>life</lemma>
            <CharacterOffsetBegin>27</CharacterOffsetBegin>
            <CharacterOffsetEnd>31</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
          </token>
          <token id="8">
            <word>asking</word>
            <lemma>ask</lemma>
            <CharacterOffsetBegin>32</CharacterOffsetBegin>
            <CharacterOffsetEnd>38</CharacterOffsetEnd>
            <POS>VBG</POS>
            <NER>O</NER>
          </token>
          <token id="9">
            <word>questions</word>
            <lemma>question</lemma>
            <CharacterOffsetBegin>39</CharacterOffsetBegin>
            <CharacterOffsetEnd>48</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
          </token>
          <token id="10">
            <word>that</word>
            <lemma>that</lemma>
            <CharacterOffsetBegin>49</CharacterOffsetBegin>
            <CharacterOffsetEnd>53</CharacterOffsetEnd>
            <POS>WDT</POS>
            <NER>O</NER>
          </token>
          <token id="11">
            <word>make</word>
            <lemma>make</lemma>
            <CharacterOffsetBegin>54</CharacterOffsetBegin>
            <CharacterOffsetEnd>58</CharacterOffsetEnd>
            <POS>VBP</POS>
            <NER>O</NER>
          </token>
          <token id="12">
            <word>you</word>
            <lemma>you</lemma>
            <CharacterOffsetBegin>59</CharacterOffsetBegin>
            <CharacterOffsetEnd>62</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
          </token>
          <token id="13">
            <word>seem</word>
            <lemma>seem</lemma>
            <CharacterOffsetBegin>63</CharacterOffsetBegin>
            <CharacterOffsetEnd>67</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
          </token>
          <token id="14">
            <word>like</word>
            <lemma>like</lemma>
            <CharacterOffsetBegin>68</CharacterOffsetBegin>
            <CharacterOffsetEnd>72</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="15">
            <word>a</word>
            <lemma>a</lemma>
            <CharacterOffsetBegin>73</CharacterOffsetBegin>
            <CharacterOffsetEnd>74</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
          </token>
          <token id="16">
            <word>child</word>
            <lemma>child</lemma>
            <CharacterOffsetBegin>75</CharacterOffsetBegin>
            <CharacterOffsetEnd>80</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
          </token>
          <token id="17">
            <word>?</word>
            <lemma>?</lemma>
            <CharacterOffsetBegin>80</CharacterOffsetBegin>
            <CharacterOffsetEnd>81</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (SQ (VBP Do) (NP (PRP you)) (VP (VB walk) (ADVP (RB around)) (PP (IN in) (NP (NP (JJ real) (NN life)) (VP (VBG asking) (NP (NP (NNS questions)) (SBAR (WHNP (WDT that)) (S (VP (VBP make) (S (NP (PRP you)) (VP (VB seem) (PP (IN like) (NP (DT a) (NN child))))))))))))) (. ?))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">walk</dependent>
          </dep>
          <dep type="aux">
            <governor idx="3">walk</governor>
            <dependent idx="1">Do</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">walk</governor>
            <dependent idx="2">you</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">walk</governor>
            <dependent idx="4">around</dependent>
          </dep>
          <dep type="case">
            <governor idx="7">life</governor>
            <dependent idx="5">in</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">life</governor>
            <dependent idx="6">real</dependent>
          </dep>
          <dep type="obl">
            <governor idx="3">walk</governor>
            <dependent idx="7">life</dependent>
          </dep>
          <dep type="acl">
            <governor idx="7">life</governor>
            <dependent idx="8">asking</dependent>
          </dep>
          <dep type="obj">
            <governor idx="8">asking</governor>
            <dependent idx="9">questions</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="11">make</governor>
            <dependent idx="10">that</dependent>
          </dep>
          <dep type="acl:relcl">
            <governor idx="9">questions</governor>
            <dependent idx="11">make</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="13">seem</governor>
            <dependent idx="12">you</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="11">make</governor>
            <dependent idx="13">seem</dependent>
          </dep>
          <dep type="case">
            <governor idx="16">child</governor>
            <dependent idx="14">like</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">child</governor>
            <dependent idx="15">a</dependent>
          </dep>
          <dep type="obl">
            <governor idx="13">seem</governor>
            <dependent idx="16">child</dependent>
          </dep>
          <dep type="punct">
            <governor idx="3">walk</governor>
            <dependent idx="17">?</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">walk</dependent>
          </dep>
          <dep type="aux">
            <governor idx="3">walk</governor>
            <dependent idx="1">Do</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">walk</governor>
            <dependent idx="2">you</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">walk</governor>
            <dependent idx="4">around</dependent>
          </dep>
          <dep type="case">
            <governor idx="7">life</governor>
            <dependent idx="5">in</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">life</governor>
            <dependent idx="6">real</dependent>
          </dep>
          <dep type="obl:in">
            <governor idx="3">walk</governor>
            <dependent idx="7">life</dependent>
          </dep>
          <dep type="acl">
            <governor idx="7">life</governor>
            <dependent idx="8">asking</dependent>
          </dep>
          <dep type="obj">
            <governor idx="8">asking</governor>
            <dependent idx="9">questions</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="11">make</governor>
            <dependent idx="10">that</dependent>
          </dep>
          <dep type="acl:relcl">
            <governor idx="9">questions</governor>
            <dependent idx="11">make</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="13">seem</governor>
            <dependent idx="12">you</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="11">make</governor>
            <dependent idx="13">seem</dependent>
          </dep>
          <dep type="case">
            <governor idx="16">child</governor>
            <dependent idx="14">like</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">child</governor>
            <dependent idx="15">a</dependent>
          </dep>
          <dep type="obl:like">
            <governor idx="13">seem</governor>
            <dependent idx="16">child</dependent>
          </dep>
          <dep type="punct">
            <governor idx="3">walk</governor>
            <dependent idx="17">?</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">walk</dependent>
          </dep>
          <dep type="aux">
            <governor idx="3">walk</governor>
            <dependent idx="1">Do</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">walk</governor>
            <dependent idx="2">you</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">walk</governor>
            <dependent idx="4">around</dependent>
          </dep>
          <dep type="case">
            <governor idx="7">life</governor>
            <dependent idx="5">in</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">life</governor>
            <dependent idx="6">real</dependent>
          </dep>
          <dep type="obl:in">
            <governor idx="3">walk</governor>
            <dependent idx="7">life</dependent>
          </dep>
          <dep type="acl">
            <governor idx="7">life</governor>
            <dependent idx="8">asking</dependent>
          </dep>
          <dep type="obj">
            <governor idx="8">asking</governor>
            <dependent idx="9">questions</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="11">make</governor>
            <dependent idx="10">that</dependent>
          </dep>
          <dep type="acl:relcl">
            <governor idx="9">questions</governor>
            <dependent idx="11">make</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="13">seem</governor>
            <dependent idx="12">you</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="11">make</governor>
            <dependent idx="13">seem</dependent>
          </dep>
          <dep type="case">
            <governor idx="16">child</governor>
            <dependent idx="14">like</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">child</governor>
            <dependent idx="15">a</dependent>
          </dep>
          <dep type="obl:like">
            <governor idx="13">seem</governor>
            <dependent idx="16">child</dependent>
          </dep>
          <dep type="punct">
            <governor idx="3">walk</governor>
            <dependent idx="17">?</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">walk</dependent>
          </dep>
          <dep type="aux">
            <governor idx="3">walk</governor>
            <dependent idx="1">Do</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">walk</governor>
            <dependent idx="2">you</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">walk</governor>
            <dependent idx="4">around</dependent>
          </dep>
          <dep type="case">
            <governor idx="7">life</governor>
            <dependent idx="5">in</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">life</governor>
            <dependent idx="6">real</dependent>
          </dep>
          <dep type="obl:in">
            <governor idx="3">walk</governor>
            <dependent idx="7">life</dependent>
          </dep>
          <dep type="acl">
            <governor idx="7">life</governor>
            <dependent idx="8">asking</dependent>
          </dep>
          <dep type="obj">
            <governor idx="8">asking</governor>
            <dependent idx="9">questions</dependent>
          </dep>
          <dep type="nsubj" extra="true">
            <governor idx="11">make</governor>
            <dependent idx="9">questions</dependent>
          </dep>
          <dep type="ref">
            <governor idx="9">questions</governor>
            <dependent idx="10">that</dependent>
          </dep>
          <dep type="acl:relcl">
            <governor idx="9">questions</governor>
            <dependent idx="11">make</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="13">seem</governor>
            <dependent idx="12">you</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="11">make</governor>
            <dependent idx="13">seem</dependent>
          </dep>
          <dep type="case">
            <governor idx="16">child</governor>
            <dependent idx="14">like</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">child</governor>
            <dependent idx="15">a</dependent>
          </dep>
          <dep type="obl:like">
            <governor idx="13">seem</governor>
            <dependent idx="16">child</dependent>
          </dep>
          <dep type="punct">
            <governor idx="3">walk</governor>
            <dependent idx="17">?</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-plus-plus-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="3">walk</dependent>
          </dep>
          <dep type="aux">
            <governor idx="3">walk</governor>
            <dependent idx="1">Do</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">walk</governor>
            <dependent idx="2">you</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="3">walk</governor>
            <dependent idx="4">around</dependent>
          </dep>
          <dep type="case">
            <governor idx="7">life</governor>
            <dependent idx="5">in</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">life</governor>
            <dependent idx="6">real</dependent>
          </dep>
          <dep type="obl:in">
            <governor idx="3">walk</governor>
            <dependent idx="7">life</dependent>
          </dep>
          <dep type="acl">
            <governor idx="7">life</governor>
            <dependent idx="8">asking</dependent>
          </dep>
          <dep type="obj">
            <governor idx="8">asking</governor>
            <dependent idx="9">questions</dependent>
          </dep>
          <dep type="nsubj" extra="true">
            <governor idx="11">make</governor>
            <dependent idx="9">questions</dependent>
          </dep>
          <dep type="ref">
            <governor idx="9">questions</governor>
            <dependent idx="10">that</dependent>
          </dep>
          <dep type="acl:relcl">
            <governor idx="9">questions</governor>
            <dependent idx="11">make</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="13">seem</governor>
            <dependent idx="12">you</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="11">make</governor>
            <dependent idx="13">seem</dependent>
          </dep>
          <dep type="case">
            <governor idx="16">child</governor>
            <dependent idx="14">like</dependent>
          </dep>
          <dep type="det">
            <governor idx="16">child</governor>
            <dependent idx="15">a</dependent>
          </dep>
          <dep type="obl:like">
            <governor idx="13">seem</governor>
            <dependent idx="16">child</dependent>
          </dep>
          <dep type="punct">
            <governor idx="3">walk</governor>
            <dependent idx="17">?</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="2">
        <tokens>
          <token id="1">
            <word>Should</word>
            <lemma>should</lemma>
            <CharacterOffsetBegin>82</CharacterOffsetBegin>
            <CharacterOffsetEnd>88</CharacterOffsetEnd>
            <POS>MD</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>be</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>89</CharacterOffsetBegin>
            <CharacterOffsetEnd>91</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
          </token>
          <token id="3">
            <word>easy</word>
            <lemma>easy</lemma>
            <CharacterOffsetBegin>92</CharacterOffsetBegin>
            <CharacterOffsetEnd>96</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
          </token>
          <token id="4">
            <word>enough</word>
            <lemma>enough</lemma>
            <CharacterOffsetBegin>97</CharacterOffsetBegin>
            <CharacterOffsetEnd>103</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
          </token>
          <token id="5">
            <word>for</word>
            <lemma>for</lemma>
            <CharacterOffsetBegin>104</CharacterOffsetBegin>
            <CharacterOffsetEnd>107</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="6">
            <word>you</word>
            <lemma>you</lemma>
            <CharacterOffsetBegin>108</CharacterOffsetBegin>
            <CharacterOffsetEnd>111</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
          </token>
          <token id="7">
            <word>to</word>
            <lemma>to</lemma>
            <CharacterOffsetBegin>112</CharacterOffsetBegin>
            <CharacterOffsetEnd>114</CharacterOffsetEnd>
            <POS>TO</POS>
            <NER>O</NER>
          </token>
          <token id="8">
            <word>find</word>
            <lemma>find</lemma>
            <CharacterOffsetBegin>115</CharacterOffsetBegin>
            <CharacterOffsetEnd>119</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
          </token>
          <token id="9">
            <word>where</word>
            <lemma>where</lemma>
            <CharacterOffsetBegin>120</CharacterOffsetBegin>
            <CharacterOffsetEnd>125</CharacterOffsetEnd>
            <POS>WRB</POS>
            <NER>O</NER>
          </token>
          <token id="10">
            <word>he</word>
            <lemma>he</lemma>
            <CharacterOffsetBegin>126</CharacterOffsetBegin>
            <CharacterOffsetEnd>128</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
          </token>
          <token id="11">
            <word>asked</word>
            <lemma>ask</lemma>
            <CharacterOffsetBegin>129</CharacterOffsetBegin>
            <CharacterOffsetEnd>134</CharacterOffsetEnd>
            <POS>VBD</POS>
            <NER>O</NER>
          </token>
          <token id="12">
            <word>for</word>
            <lemma>for</lemma>
            <CharacterOffsetBegin>135</CharacterOffsetBegin>
            <CharacterOffsetEnd>138</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="13">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>139</CharacterOffsetBegin>
            <CharacterOffsetEnd>142</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
          </token>
          <token id="14">
            <word>LSAT</word>
            <lemma>lsat</lemma>
            <CharacterOffsetBegin>143</CharacterOffsetBegin>
            <CharacterOffsetEnd>147</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>ORGANIZATION</NER>
          </token>
          <token id="15">
            <word>scores</word>
            <lemma>score</lemma>
            <CharacterOffsetBegin>148</CharacterOffsetBegin>
            <CharacterOffsetEnd>154</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
          </token>
          <token id="16">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>155</CharacterOffsetBegin>
            <CharacterOffsetEnd>157</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="17">
            <word>Brett</word>
            <lemma>Brett</lemma>
            <CharacterOffsetBegin>158</CharacterOffsetBegin>
            <CharacterOffsetEnd>163</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>PERSON</NER>
          </token>
          <token id="18">
            <word>Kavanaugh</word>
            <lemma>Kavanaugh</lemma>
            <CharacterOffsetBegin>164</CharacterOffsetBegin>
            <CharacterOffsetEnd>173</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>PERSON</NER>
          </token>
          <token id="19">
            <word>and</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>174</CharacterOffsetBegin>
            <CharacterOffsetEnd>177</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
          </token>
          <token id="20">
            <word>Amy</word>
            <lemma>Amy</lemma>
            <CharacterOffsetBegin>178</CharacterOffsetBegin>
            <CharacterOffsetEnd>181</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>PERSON</NER>
          </token>
          <token id="21">
            <word>Coney</word>
            <lemma>Coney</lemma>
            <CharacterOffsetBegin>182</CharacterOffsetBegin>
            <CharacterOffsetEnd>187</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>PERSON</NER>
          </token>
          <token id="22">
            <word>Barrett</word>
            <lemma>Barrett</lemma>
            <CharacterOffsetBegin>188</CharacterOffsetBegin>
            <CharacterOffsetEnd>195</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>PERSON</NER>
          </token>
          <token id="23">
            <word>to</word>
            <lemma>to</lemma>
            <CharacterOffsetBegin>196</CharacterOffsetBegin>
            <CharacterOffsetEnd>198</CharacterOffsetEnd>
            <POS>TO</POS>
            <NER>O</NER>
          </token>
          <token id="24">
            <word>prove</word>
            <lemma>prove</lemma>
            <CharacterOffsetBegin>199</CharacterOffsetBegin>
            <CharacterOffsetEnd>204</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
          </token>
          <token id="25">
            <word>me</word>
            <lemma>I</lemma>
            <CharacterOffsetBegin>205</CharacterOffsetBegin>
            <CharacterOffsetEnd>207</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
          </token>
          <token id="26">
            <word>wrong</word>
            <lemma>wrong</lemma>
            <CharacterOffsetBegin>208</CharacterOffsetBegin>
            <CharacterOffsetEnd>213</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
          </token>
          <token id="27">
            <word>though</word>
            <lemma>though</lemma>
            <CharacterOffsetBegin>214</CharacterOffsetBegin>
            <CharacterOffsetEnd>220</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
          </token>
          <token id="28">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>220</CharacterOffsetBegin>
            <CharacterOffsetEnd>221</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (S (VP (MD Should) (VP (VB be) (ADJP (ADJP (JJ easy) (JJ enough)) (PP (IN for) (NP (PRP you)))) (S (VP (TO to) (VP (VB find) (SBAR (WHADVP (WRB where)) (S (NP (PRP he)) (VP (VBD asked) (PP (IN for) (NP (NP (DT the) (NN LSAT) (NNS scores)) (PP (IN of) (NP (NP (NNP Brett) (NNP Kavanaugh)) (CC and) (NP (NNP Amy) (NNP Coney) (NNP Barrett)))))) (S (VP (TO to) (VP (VB prove) (S (NP (PRP me)) (ADJP (JJ wrong)) (ADVP (RB though)))))))))))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="4">enough</dependent>
          </dep>
          <dep type="aux">
            <governor idx="4">enough</governor>
            <dependent idx="1">Should</dependent>
          </dep>
          <dep type="cop">
            <governor idx="4">enough</governor>
            <dependent idx="2">be</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="4">enough</governor>
            <dependent idx="3">easy</dependent>
          </dep>
          <dep type="case">
            <governor idx="6">you</governor>
            <dependent idx="5">for</dependent>
          </dep>
          <dep type="obl">
            <governor idx="4">enough</governor>
            <dependent idx="6">you</dependent>
          </dep>
          <dep type="mark">
            <governor idx="8">find</governor>
            <dependent idx="7">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="4">enough</governor>
            <dependent idx="8">find</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="11">asked</governor>
            <dependent idx="9">where</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="11">asked</governor>
            <dependent idx="10">he</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="8">find</governor>
            <dependent idx="11">asked</dependent>
          </dep>
          <dep type="case">
            <governor idx="15">scores</governor>
            <dependent idx="12">for</dependent>
          </dep>
          <dep type="det">
            <governor idx="15">scores</governor>
            <dependent idx="13">the</dependent>
          </dep>
          <dep type="compound">
            <governor idx="15">scores</governor>
            <dependent idx="14">LSAT</dependent>
          </dep>
          <dep type="obl">
            <governor idx="11">asked</governor>
            <dependent idx="15">scores</dependent>
          </dep>
          <dep type="case">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="16">of</dependent>
          </dep>
          <dep type="compound">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="17">Brett</dependent>
          </dep>
          <dep type="nmod">
            <governor idx="15">scores</governor>
            <dependent idx="18">Kavanaugh</dependent>
          </dep>
          <dep type="cc">
            <governor idx="22">Barrett</governor>
            <dependent idx="19">and</dependent>
          </dep>
          <dep type="compound">
            <governor idx="22">Barrett</governor>
            <dependent idx="20">Amy</dependent>
          </dep>
          <dep type="compound">
            <governor idx="22">Barrett</governor>
            <dependent idx="21">Coney</dependent>
          </dep>
          <dep type="conj">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="22">Barrett</dependent>
          </dep>
          <dep type="mark">
            <governor idx="24">prove</governor>
            <dependent idx="23">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="11">asked</governor>
            <dependent idx="24">prove</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="26">wrong</governor>
            <dependent idx="25">me</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="24">prove</governor>
            <dependent idx="26">wrong</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="26">wrong</governor>
            <dependent idx="27">though</dependent>
          </dep>
          <dep type="punct">
            <governor idx="4">enough</governor>
            <dependent idx="28">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="4">enough</dependent>
          </dep>
          <dep type="aux">
            <governor idx="4">enough</governor>
            <dependent idx="1">Should</dependent>
          </dep>
          <dep type="cop">
            <governor idx="4">enough</governor>
            <dependent idx="2">be</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="4">enough</governor>
            <dependent idx="3">easy</dependent>
          </dep>
          <dep type="case">
            <governor idx="6">you</governor>
            <dependent idx="5">for</dependent>
          </dep>
          <dep type="obl:for">
            <governor idx="4">enough</governor>
            <dependent idx="6">you</dependent>
          </dep>
          <dep type="mark">
            <governor idx="8">find</governor>
            <dependent idx="7">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="4">enough</governor>
            <dependent idx="8">find</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="11">asked</governor>
            <dependent idx="9">where</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="11">asked</governor>
            <dependent idx="10">he</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="8">find</governor>
            <dependent idx="11">asked</dependent>
          </dep>
          <dep type="case">
            <governor idx="15">scores</governor>
            <dependent idx="12">for</dependent>
          </dep>
          <dep type="det">
            <governor idx="15">scores</governor>
            <dependent idx="13">the</dependent>
          </dep>
          <dep type="compound">
            <governor idx="15">scores</governor>
            <dependent idx="14">LSAT</dependent>
          </dep>
          <dep type="obl:for">
            <governor idx="11">asked</governor>
            <dependent idx="15">scores</dependent>
          </dep>
          <dep type="case">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="16">of</dependent>
          </dep>
          <dep type="compound">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="17">Brett</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="15">scores</governor>
            <dependent idx="18">Kavanaugh</dependent>
          </dep>
          <dep type="cc">
            <governor idx="22">Barrett</governor>
            <dependent idx="19">and</dependent>
          </dep>
          <dep type="compound">
            <governor idx="22">Barrett</governor>
            <dependent idx="20">Amy</dependent>
          </dep>
          <dep type="compound">
            <governor idx="22">Barrett</governor>
            <dependent idx="21">Coney</dependent>
          </dep>
          <dep type="conj:and">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="22">Barrett</dependent>
          </dep>
          <dep type="mark">
            <governor idx="24">prove</governor>
            <dependent idx="23">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="11">asked</governor>
            <dependent idx="24">prove</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="26">wrong</governor>
            <dependent idx="25">me</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="24">prove</governor>
            <dependent idx="26">wrong</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="26">wrong</governor>
            <dependent idx="27">though</dependent>
          </dep>
          <dep type="punct">
            <governor idx="4">enough</governor>
            <dependent idx="28">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="4">enough</dependent>
          </dep>
          <dep type="aux">
            <governor idx="4">enough</governor>
            <dependent idx="1">Should</dependent>
          </dep>
          <dep type="cop">
            <governor idx="4">enough</governor>
            <dependent idx="2">be</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="4">enough</governor>
            <dependent idx="3">easy</dependent>
          </dep>
          <dep type="case">
            <governor idx="6">you</governor>
            <dependent idx="5">for</dependent>
          </dep>
          <dep type="obl:for">
            <governor idx="4">enough</governor>
            <dependent idx="6">you</dependent>
          </dep>
          <dep type="mark">
            <governor idx="8">find</governor>
            <dependent idx="7">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="4">enough</governor>
            <dependent idx="8">find</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="11">asked</governor>
            <dependent idx="9">where</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="11">asked</governor>
            <dependent idx="10">he</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="8">find</governor>
            <dependent idx="11">asked</dependent>
          </dep>
          <dep type="case">
            <governor idx="15">scores</governor>
            <dependent idx="12">for</dependent>
          </dep>
          <dep type="det">
            <governor idx="15">scores</governor>
            <dependent idx="13">the</dependent>
          </dep>
          <dep type="compound">
            <governor idx="15">scores</governor>
            <dependent idx="14">LSAT</dependent>
          </dep>
          <dep type="obl:for">
            <governor idx="11">asked</governor>
            <dependent idx="15">scores</dependent>
          </dep>
          <dep type="case">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="16">of</dependent>
          </dep>
          <dep type="compound">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="17">Brett</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="15">scores</governor>
            <dependent idx="18">Kavanaugh</dependent>
          </dep>
          <dep type="cc">
            <governor idx="22">Barrett</governor>
            <dependent idx="19">and</dependent>
          </dep>
          <dep type="compound">
            <governor idx="22">Barrett</governor>
            <dependent idx="20">Amy</dependent>
          </dep>
          <dep type="compound">
            <governor idx="22">Barrett</governor>
            <dependent idx="21">Coney</dependent>
          </dep>
          <dep type="nmod:of" extra="true">
            <governor idx="15">scores</governor>
            <dependent idx="22">Barrett</dependent>
          </dep>
          <dep type="conj:and">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="22">Barrett</dependent>
          </dep>
          <dep type="mark">
            <governor idx="24">prove</governor>
            <dependent idx="23">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="11">asked</governor>
            <dependent idx="24">prove</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="26">wrong</governor>
            <dependent idx="25">me</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="24">prove</governor>
            <dependent idx="26">wrong</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="26">wrong</governor>
            <dependent idx="27">though</dependent>
          </dep>
          <dep type="punct">
            <governor idx="4">enough</governor>
            <dependent idx="28">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="4">enough</dependent>
          </dep>
          <dep type="aux">
            <governor idx="4">enough</governor>
            <dependent idx="1">Should</dependent>
          </dep>
          <dep type="cop">
            <governor idx="4">enough</governor>
            <dependent idx="2">be</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="4">enough</governor>
            <dependent idx="3">easy</dependent>
          </dep>
          <dep type="case">
            <governor idx="6">you</governor>
            <dependent idx="5">for</dependent>
          </dep>
          <dep type="obl:for">
            <governor idx="4">enough</governor>
            <dependent idx="6">you</dependent>
          </dep>
          <dep type="mark">
            <governor idx="8">find</governor>
            <dependent idx="7">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="4">enough</governor>
            <dependent idx="8">find</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="11">asked</governor>
            <dependent idx="9">where</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="11">asked</governor>
            <dependent idx="10">he</dependent>
          </dep>
          <dep type="nsubj:xsubj" extra="true">
            <governor idx="24">prove</governor>
            <dependent idx="10">he</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="8">find</governor>
            <dependent idx="11">asked</dependent>
          </dep>
          <dep type="case">
            <governor idx="15">scores</governor>
            <dependent idx="12">for</dependent>
          </dep>
          <dep type="det">
            <governor idx="15">scores</governor>
            <dependent idx="13">the</dependent>
          </dep>
          <dep type="compound">
            <governor idx="15">scores</governor>
            <dependent idx="14">LSAT</dependent>
          </dep>
          <dep type="obl:for">
            <governor idx="11">asked</governor>
            <dependent idx="15">scores</dependent>
          </dep>
          <dep type="case">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="16">of</dependent>
          </dep>
          <dep type="compound">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="17">Brett</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="15">scores</governor>
            <dependent idx="18">Kavanaugh</dependent>
          </dep>
          <dep type="cc">
            <governor idx="22">Barrett</governor>
            <dependent idx="19">and</dependent>
          </dep>
          <dep type="compound">
            <governor idx="22">Barrett</governor>
            <dependent idx="20">Amy</dependent>
          </dep>
          <dep type="compound">
            <governor idx="22">Barrett</governor>
            <dependent idx="21">Coney</dependent>
          </dep>
          <dep type="nmod:of" extra="true">
            <governor idx="15">scores</governor>
            <dependent idx="22">Barrett</dependent>
          </dep>
          <dep type="conj:and">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="22">Barrett</dependent>
          </dep>
          <dep type="mark">
            <governor idx="24">prove</governor>
            <dependent idx="23">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="11">asked</governor>
            <dependent idx="24">prove</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="26">wrong</governor>
            <dependent idx="25">me</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="24">prove</governor>
            <dependent idx="26">wrong</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="26">wrong</governor>
            <dependent idx="27">though</dependent>
          </dep>
          <dep type="punct">
            <governor idx="4">enough</governor>
            <dependent idx="28">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-plus-plus-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="4">enough</dependent>
          </dep>
          <dep type="aux">
            <governor idx="4">enough</governor>
            <dependent idx="1">Should</dependent>
          </dep>
          <dep type="cop">
            <governor idx="4">enough</governor>
            <dependent idx="2">be</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="4">enough</governor>
            <dependent idx="3">easy</dependent>
          </dep>
          <dep type="case">
            <governor idx="6">you</governor>
            <dependent idx="5">for</dependent>
          </dep>
          <dep type="obl:for">
            <governor idx="4">enough</governor>
            <dependent idx="6">you</dependent>
          </dep>
          <dep type="mark">
            <governor idx="8">find</governor>
            <dependent idx="7">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="4">enough</governor>
            <dependent idx="8">find</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="11">asked</governor>
            <dependent idx="9">where</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="11">asked</governor>
            <dependent idx="10">he</dependent>
          </dep>
          <dep type="nsubj:xsubj" extra="true">
            <governor idx="24">prove</governor>
            <dependent idx="10">he</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="8">find</governor>
            <dependent idx="11">asked</dependent>
          </dep>
          <dep type="case">
            <governor idx="15">scores</governor>
            <dependent idx="12">for</dependent>
          </dep>
          <dep type="det">
            <governor idx="15">scores</governor>
            <dependent idx="13">the</dependent>
          </dep>
          <dep type="compound">
            <governor idx="15">scores</governor>
            <dependent idx="14">LSAT</dependent>
          </dep>
          <dep type="obl:for">
            <governor idx="11">asked</governor>
            <dependent idx="15">scores</dependent>
          </dep>
          <dep type="case">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="16">of</dependent>
          </dep>
          <dep type="compound">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="17">Brett</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="15">scores</governor>
            <dependent idx="18">Kavanaugh</dependent>
          </dep>
          <dep type="cc">
            <governor idx="22">Barrett</governor>
            <dependent idx="19">and</dependent>
          </dep>
          <dep type="compound">
            <governor idx="22">Barrett</governor>
            <dependent idx="20">Amy</dependent>
          </dep>
          <dep type="compound">
            <governor idx="22">Barrett</governor>
            <dependent idx="21">Coney</dependent>
          </dep>
          <dep type="nmod:of" extra="true">
            <governor idx="15">scores</governor>
            <dependent idx="22">Barrett</dependent>
          </dep>
          <dep type="conj:and">
            <governor idx="18">Kavanaugh</governor>
            <dependent idx="22">Barrett</dependent>
          </dep>
          <dep type="mark">
            <governor idx="24">prove</governor>
            <dependent idx="23">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="11">asked</governor>
            <dependent idx="24">prove</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="26">wrong</governor>
            <dependent idx="25">me</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="24">prove</governor>
            <dependent idx="26">wrong</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="26">wrong</governor>
            <dependent idx="27">though</dependent>
          </dep>
          <dep type="punct">
            <governor idx="4">enough</governor>
            <dependent idx="28">.</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="3">
        <tokens>
          <token id="1">
            <word>You</word>
            <lemma>you</lemma>
            <CharacterOffsetBegin>223</CharacterOffsetBegin>
            <CharacterOffsetEnd>226</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>said</word>
            <lemma>say</lemma>
            <CharacterOffsetBegin>227</CharacterOffsetBegin>
            <CharacterOffsetEnd>231</CharacterOffsetEnd>
            <POS>VBD</POS>
            <NER>O</NER>
          </token>
          <token id="3">
            <word>nothing</word>
            <lemma>nothing</lemma>
            <CharacterOffsetBegin>232</CharacterOffsetBegin>
            <CharacterOffsetEnd>239</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
          </token>
          <token id="4">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>239</CharacterOffsetBegin>
            <CharacterOffsetEnd>240</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (PRP You)) (VP (VBD said) (NP (NN nothing))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="2">said</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="2">said</governor>
            <dependent idx="1">You</dependent>
          </dep>
          <dep type="obj">
            <governor idx="2">said</governor>
            <dependent idx="3">nothing</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">said</governor>
            <dependent idx="4">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="2">said</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="2">said</governor>
            <dependent idx="1">You</dependent>
          </dep>
          <dep type="obj">
            <governor idx="2">said</governor>
            <dependent idx="3">nothing</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">said</governor>
            <dependent idx="4">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="2">said</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="2">said</governor>
            <dependent idx="1">You</dependent>
          </dep>
          <dep type="obj">
            <governor idx="2">said</governor>
            <dependent idx="3">nothing</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">said</governor>
            <dependent idx="4">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="2">said</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="2">said</governor>
            <dependent idx="1">You</dependent>
          </dep>
          <dep type="obj">
            <governor idx="2">said</governor>
            <dependent idx="3">nothing</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">said</governor>
            <dependent idx="4">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-plus-plus-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="2">said</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="2">said</governor>
            <dependent idx="1">You</dependent>
          </dep>
          <dep type="obj">
            <governor idx="2">said</governor>
            <dependent idx="3">nothing</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">said</governor>
            <dependent idx="4">.</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="4">
        <tokens>
          <token id="1">
            <word>Again</word>
            <lemma>again</lemma>
            <CharacterOffsetBegin>241</CharacterOffsetBegin>
            <CharacterOffsetEnd>246</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>246</CharacterOffsetBegin>
            <CharacterOffsetEnd>247</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
          </token>
          <token id="3">
            <word>how</word>
            <lemma>how</lemma>
            <CharacterOffsetBegin>248</CharacterOffsetBegin>
            <CharacterOffsetEnd>251</CharacterOffsetEnd>
            <POS>WRB</POS>
            <NER>O</NER>
          </token>
          <token id="4">
            <word>does</word>
            <lemma>do</lemma>
            <CharacterOffsetBegin>252</CharacterOffsetBegin>
            <CharacterOffsetEnd>256</CharacterOffsetEnd>
            <POS>VBZ</POS>
            <NER>O</NER>
          </token>
          <token id="5">
            <word>that</word>
            <lemma>that</lemma>
            <CharacterOffsetBegin>257</CharacterOffsetBegin>
            <CharacterOffsetEnd>261</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
          </token>
          <token id="6">
            <word>make</word>
            <lemma>make</lemma>
            <CharacterOffsetBegin>262</CharacterOffsetBegin>
            <CharacterOffsetEnd>266</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
          </token>
          <token id="7">
            <word>him</word>
            <lemma>he</lemma>
            <CharacterOffsetBegin>267</CharacterOffsetBegin>
            <CharacterOffsetEnd>270</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
          </token>
          <token id="8">
            <word>racist</word>
            <lemma>racist</lemma>
            <CharacterOffsetBegin>271</CharacterOffsetBegin>
            <CharacterOffsetEnd>277</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
          </token>
          <token id="9">
            <word>?</word>
            <lemma>?</lemma>
            <CharacterOffsetBegin>277</CharacterOffsetBegin>
            <CharacterOffsetEnd>278</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (SBARQ (ADVP (RB Again)) (, ,) (WHADVP (WRB how)) (SQ (VBZ does) (NP (DT that)) (VP (VB make) (S (NP (PRP him)) (ADJP (JJ racist))))) (. ?))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">make</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">make</governor>
            <dependent idx="1">Again</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">make</governor>
            <dependent idx="2">,</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">make</governor>
            <dependent idx="3">how</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">make</governor>
            <dependent idx="4">does</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">make</governor>
            <dependent idx="5">that</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="8">racist</governor>
            <dependent idx="7">him</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="6">make</governor>
            <dependent idx="8">racist</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">make</governor>
            <dependent idx="9">?</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">make</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">make</governor>
            <dependent idx="1">Again</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">make</governor>
            <dependent idx="2">,</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">make</governor>
            <dependent idx="3">how</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">make</governor>
            <dependent idx="4">does</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">make</governor>
            <dependent idx="5">that</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="8">racist</governor>
            <dependent idx="7">him</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="6">make</governor>
            <dependent idx="8">racist</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">make</governor>
            <dependent idx="9">?</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">make</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">make</governor>
            <dependent idx="1">Again</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">make</governor>
            <dependent idx="2">,</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">make</governor>
            <dependent idx="3">how</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">make</governor>
            <dependent idx="4">does</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">make</governor>
            <dependent idx="5">that</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="8">racist</governor>
            <dependent idx="7">him</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="6">make</governor>
            <dependent idx="8">racist</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">make</governor>
            <dependent idx="9">?</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">make</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">make</governor>
            <dependent idx="1">Again</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">make</governor>
            <dependent idx="2">,</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">make</governor>
            <dependent idx="3">how</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">make</governor>
            <dependent idx="4">does</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">make</governor>
            <dependent idx="5">that</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="8">racist</governor>
            <dependent idx="7">him</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="6">make</governor>
            <dependent idx="8">racist</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">make</governor>
            <dependent idx="9">?</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-plus-plus-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="6">make</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">make</governor>
            <dependent idx="1">Again</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">make</governor>
            <dependent idx="2">,</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">make</governor>
            <dependent idx="3">how</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">make</governor>
            <dependent idx="4">does</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="6">make</governor>
            <dependent idx="5">that</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="8">racist</governor>
            <dependent idx="7">him</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="6">make</governor>
            <dependent idx="8">racist</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">make</governor>
            <dependent idx="9">?</dependent>
          </dep>
        </dependencies>
      </sentence>
    </sentences>
  </document>
</root>
