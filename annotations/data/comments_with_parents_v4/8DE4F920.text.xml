<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="CoreNLP-to-HTML.xsl" type="text/xsl"?>
<root>
  <document>
    <docId>8DE4F920.text</docId>
    <sentences>
      <sentence id="1">
        <tokens>
          <token id="1">
            <word>If</word>
            <lemma>if</lemma>
            <CharacterOffsetBegin>0</CharacterOffsetBegin>
            <CharacterOffsetEnd>2</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>it</word>
            <lemma>it</lemma>
            <CharacterOffsetBegin>3</CharacterOffsetBegin>
            <CharacterOffsetEnd>5</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
          </token>
          <token id="3">
            <word>was</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>6</CharacterOffsetBegin>
            <CharacterOffsetEnd>9</CharacterOffsetEnd>
            <POS>VBD</POS>
            <NER>O</NER>
          </token>
          <token id="4">
            <word>n’t</word>
            <lemma>n’t</lemma>
            <CharacterOffsetBegin>9</CharacterOffsetBegin>
            <CharacterOffsetEnd>12</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
          </token>
          <token id="5">
            <word>for</word>
            <lemma>for</lemma>
            <CharacterOffsetBegin>13</CharacterOffsetBegin>
            <CharacterOffsetEnd>16</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="6">
            <word>double</word>
            <lemma>double</lemma>
            <CharacterOffsetBegin>17</CharacterOffsetBegin>
            <CharacterOffsetEnd>23</CharacterOffsetEnd>
            <POS>JJ</POS>
            <NER>O</NER>
          </token>
          <token id="7">
            <word>standards</word>
            <lemma>standard</lemma>
            <CharacterOffsetBegin>24</CharacterOffsetBegin>
            <CharacterOffsetEnd>33</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
          </token>
          <token id="8">
            <word>,</word>
            <lemma>,</lemma>
            <CharacterOffsetBegin>33</CharacterOffsetBegin>
            <CharacterOffsetEnd>34</CharacterOffsetEnd>
            <POS>,</POS>
            <NER>O</NER>
          </token>
          <token id="9">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>35</CharacterOffsetBegin>
            <CharacterOffsetEnd>38</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
          </token>
          <token id="10">
            <word>left</word>
            <lemma>left</lemma>
            <CharacterOffsetBegin>39</CharacterOffsetBegin>
            <CharacterOffsetEnd>43</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
          </token>
          <token id="11">
            <word>would</word>
            <lemma>would</lemma>
            <CharacterOffsetBegin>44</CharacterOffsetBegin>
            <CharacterOffsetEnd>49</CharacterOffsetEnd>
            <POS>MD</POS>
            <NER>O</NER>
          </token>
          <token id="12">
            <word>have</word>
            <lemma>have</lemma>
            <CharacterOffsetBegin>50</CharacterOffsetBegin>
            <CharacterOffsetEnd>54</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
          </token>
          <token id="13">
            <word>no</word>
            <lemma>no</lemma>
            <CharacterOffsetBegin>55</CharacterOffsetBegin>
            <CharacterOffsetEnd>57</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
          </token>
          <token id="14">
            <word>standards</word>
            <lemma>standard</lemma>
            <CharacterOffsetBegin>58</CharacterOffsetBegin>
            <CharacterOffsetEnd>67</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
          </token>
          <token id="15">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>67</CharacterOffsetBegin>
            <CharacterOffsetEnd>68</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (S (SBAR (IN If) (S (NP (PRP it)) (VP (VBD was) (RB n’t) (PP (IN for) (NP (JJ double) (NNS standards)))))) (, ,) (NP (DT the) (NN left)) (VP (MD would) (VP (VB have) (NP (DT no) (NNS standards)))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="12">have</dependent>
          </dep>
          <dep type="mark">
            <governor idx="7">standards</governor>
            <dependent idx="1">If</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">standards</governor>
            <dependent idx="2">it</dependent>
          </dep>
          <dep type="cop">
            <governor idx="7">standards</governor>
            <dependent idx="3">was</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">standards</governor>
            <dependent idx="4">n’t</dependent>
          </dep>
          <dep type="case">
            <governor idx="7">standards</governor>
            <dependent idx="5">for</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">standards</governor>
            <dependent idx="6">double</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="12">have</governor>
            <dependent idx="7">standards</dependent>
          </dep>
          <dep type="punct">
            <governor idx="12">have</governor>
            <dependent idx="8">,</dependent>
          </dep>
          <dep type="det">
            <governor idx="10">left</governor>
            <dependent idx="9">the</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="12">have</governor>
            <dependent idx="10">left</dependent>
          </dep>
          <dep type="aux">
            <governor idx="12">have</governor>
            <dependent idx="11">would</dependent>
          </dep>
          <dep type="det">
            <governor idx="14">standards</governor>
            <dependent idx="13">no</dependent>
          </dep>
          <dep type="obj">
            <governor idx="12">have</governor>
            <dependent idx="14">standards</dependent>
          </dep>
          <dep type="punct">
            <governor idx="12">have</governor>
            <dependent idx="15">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="12">have</dependent>
          </dep>
          <dep type="mark">
            <governor idx="7">standards</governor>
            <dependent idx="1">If</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">standards</governor>
            <dependent idx="2">it</dependent>
          </dep>
          <dep type="cop">
            <governor idx="7">standards</governor>
            <dependent idx="3">was</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">standards</governor>
            <dependent idx="4">n’t</dependent>
          </dep>
          <dep type="case">
            <governor idx="7">standards</governor>
            <dependent idx="5">for</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">standards</governor>
            <dependent idx="6">double</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="12">have</governor>
            <dependent idx="7">standards</dependent>
          </dep>
          <dep type="punct">
            <governor idx="12">have</governor>
            <dependent idx="8">,</dependent>
          </dep>
          <dep type="det">
            <governor idx="10">left</governor>
            <dependent idx="9">the</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="12">have</governor>
            <dependent idx="10">left</dependent>
          </dep>
          <dep type="aux">
            <governor idx="12">have</governor>
            <dependent idx="11">would</dependent>
          </dep>
          <dep type="det">
            <governor idx="14">standards</governor>
            <dependent idx="13">no</dependent>
          </dep>
          <dep type="obj">
            <governor idx="12">have</governor>
            <dependent idx="14">standards</dependent>
          </dep>
          <dep type="punct">
            <governor idx="12">have</governor>
            <dependent idx="15">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="12">have</dependent>
          </dep>
          <dep type="mark">
            <governor idx="7">standards</governor>
            <dependent idx="1">If</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">standards</governor>
            <dependent idx="2">it</dependent>
          </dep>
          <dep type="cop">
            <governor idx="7">standards</governor>
            <dependent idx="3">was</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">standards</governor>
            <dependent idx="4">n’t</dependent>
          </dep>
          <dep type="case">
            <governor idx="7">standards</governor>
            <dependent idx="5">for</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">standards</governor>
            <dependent idx="6">double</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="12">have</governor>
            <dependent idx="7">standards</dependent>
          </dep>
          <dep type="punct">
            <governor idx="12">have</governor>
            <dependent idx="8">,</dependent>
          </dep>
          <dep type="det">
            <governor idx="10">left</governor>
            <dependent idx="9">the</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="12">have</governor>
            <dependent idx="10">left</dependent>
          </dep>
          <dep type="aux">
            <governor idx="12">have</governor>
            <dependent idx="11">would</dependent>
          </dep>
          <dep type="det">
            <governor idx="14">standards</governor>
            <dependent idx="13">no</dependent>
          </dep>
          <dep type="obj">
            <governor idx="12">have</governor>
            <dependent idx="14">standards</dependent>
          </dep>
          <dep type="punct">
            <governor idx="12">have</governor>
            <dependent idx="15">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="12">have</dependent>
          </dep>
          <dep type="mark">
            <governor idx="7">standards</governor>
            <dependent idx="1">If</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">standards</governor>
            <dependent idx="2">it</dependent>
          </dep>
          <dep type="cop">
            <governor idx="7">standards</governor>
            <dependent idx="3">was</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">standards</governor>
            <dependent idx="4">n’t</dependent>
          </dep>
          <dep type="case">
            <governor idx="7">standards</governor>
            <dependent idx="5">for</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">standards</governor>
            <dependent idx="6">double</dependent>
          </dep>
          <dep type="advcl:for">
            <governor idx="12">have</governor>
            <dependent idx="7">standards</dependent>
          </dep>
          <dep type="punct">
            <governor idx="12">have</governor>
            <dependent idx="8">,</dependent>
          </dep>
          <dep type="det">
            <governor idx="10">left</governor>
            <dependent idx="9">the</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="12">have</governor>
            <dependent idx="10">left</dependent>
          </dep>
          <dep type="aux">
            <governor idx="12">have</governor>
            <dependent idx="11">would</dependent>
          </dep>
          <dep type="det">
            <governor idx="14">standards</governor>
            <dependent idx="13">no</dependent>
          </dep>
          <dep type="obj">
            <governor idx="12">have</governor>
            <dependent idx="14">standards</dependent>
          </dep>
          <dep type="punct">
            <governor idx="12">have</governor>
            <dependent idx="15">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-plus-plus-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="12">have</dependent>
          </dep>
          <dep type="mark">
            <governor idx="7">standards</governor>
            <dependent idx="1">If</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">standards</governor>
            <dependent idx="2">it</dependent>
          </dep>
          <dep type="cop">
            <governor idx="7">standards</governor>
            <dependent idx="3">was</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">standards</governor>
            <dependent idx="4">n’t</dependent>
          </dep>
          <dep type="case">
            <governor idx="7">standards</governor>
            <dependent idx="5">for</dependent>
          </dep>
          <dep type="amod">
            <governor idx="7">standards</governor>
            <dependent idx="6">double</dependent>
          </dep>
          <dep type="advcl:for">
            <governor idx="12">have</governor>
            <dependent idx="7">standards</dependent>
          </dep>
          <dep type="punct">
            <governor idx="12">have</governor>
            <dependent idx="8">,</dependent>
          </dep>
          <dep type="det">
            <governor idx="10">left</governor>
            <dependent idx="9">the</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="12">have</governor>
            <dependent idx="10">left</dependent>
          </dep>
          <dep type="aux">
            <governor idx="12">have</governor>
            <dependent idx="11">would</dependent>
          </dep>
          <dep type="det">
            <governor idx="14">standards</governor>
            <dependent idx="13">no</dependent>
          </dep>
          <dep type="obj">
            <governor idx="12">have</governor>
            <dependent idx="14">standards</dependent>
          </dep>
          <dep type="punct">
            <governor idx="12">have</governor>
            <dependent idx="15">.</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="2">
        <tokens>
          <token id="1">
            <word>90</word>
            <lemma>90</lemma>
            <CharacterOffsetBegin>70</CharacterOffsetBegin>
            <CharacterOffsetEnd>72</CharacterOffsetEnd>
            <POS>CD</POS>
            <NER>PERCENT</NER>
            <NormalizedNER>%90.0</NormalizedNER>
          </token>
          <token id="2">
            <word>%</word>
            <lemma>%</lemma>
            <CharacterOffsetBegin>72</CharacterOffsetBegin>
            <CharacterOffsetEnd>73</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>PERCENT</NER>
            <NormalizedNER>%90.0</NormalizedNER>
          </token>
          <token id="3">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>74</CharacterOffsetBegin>
            <CharacterOffsetEnd>76</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="4">
            <word>truckers</word>
            <lemma>trucker</lemma>
            <CharacterOffsetBegin>77</CharacterOffsetBegin>
            <CharacterOffsetEnd>85</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
          </token>
          <token id="5">
            <word>are</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>86</CharacterOffsetBegin>
            <CharacterOffsetEnd>89</CharacterOffsetEnd>
            <POS>VBP</POS>
            <NER>O</NER>
          </token>
          <token id="6">
            <word>already</word>
            <lemma>already</lemma>
            <CharacterOffsetBegin>90</CharacterOffsetBegin>
            <CharacterOffsetEnd>97</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
          </token>
          <token id="7">
            <word>vaccinated</word>
            <lemma>vaccinate</lemma>
            <CharacterOffsetBegin>98</CharacterOffsetBegin>
            <CharacterOffsetEnd>108</CharacterOffsetEnd>
            <POS>VBN</POS>
            <NER>O</NER>
          </token>
          <token id="8">
            <word>lol</word>
            <lemma>lol</lemma>
            <CharacterOffsetBegin>109</CharacterOffsetBegin>
            <CharacterOffsetEnd>112</CharacterOffsetEnd>
            <POS>UH</POS>
            <NER>O</NER>
          </token>
          <token id="9">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>112</CharacterOffsetBegin>
            <CharacterOffsetEnd>113</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (S (NP (NP (CD 90) (NN %)) (PP (IN of) (NP (NNS truckers)))) (VP (VBP are) (ADVP (RB already)) (VP (VBN vaccinated) (S (INTJ (UH lol))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">vaccinated</dependent>
          </dep>
          <dep type="nummod">
            <governor idx="2">%</governor>
            <dependent idx="1">90</dependent>
          </dep>
          <dep type="nsubj:pass">
            <governor idx="7">vaccinated</governor>
            <dependent idx="2">%</dependent>
          </dep>
          <dep type="case">
            <governor idx="4">truckers</governor>
            <dependent idx="3">of</dependent>
          </dep>
          <dep type="nmod">
            <governor idx="2">%</governor>
            <dependent idx="4">truckers</dependent>
          </dep>
          <dep type="aux:pass">
            <governor idx="7">vaccinated</governor>
            <dependent idx="5">are</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">vaccinated</governor>
            <dependent idx="6">already</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="7">vaccinated</governor>
            <dependent idx="8">lol</dependent>
          </dep>
          <dep type="punct">
            <governor idx="7">vaccinated</governor>
            <dependent idx="9">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">vaccinated</dependent>
          </dep>
          <dep type="nummod">
            <governor idx="2">%</governor>
            <dependent idx="1">90</dependent>
          </dep>
          <dep type="nsubj:pass">
            <governor idx="7">vaccinated</governor>
            <dependent idx="2">%</dependent>
          </dep>
          <dep type="case">
            <governor idx="4">truckers</governor>
            <dependent idx="3">of</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="2">%</governor>
            <dependent idx="4">truckers</dependent>
          </dep>
          <dep type="aux:pass">
            <governor idx="7">vaccinated</governor>
            <dependent idx="5">are</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">vaccinated</governor>
            <dependent idx="6">already</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="7">vaccinated</governor>
            <dependent idx="8">lol</dependent>
          </dep>
          <dep type="punct">
            <governor idx="7">vaccinated</governor>
            <dependent idx="9">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">vaccinated</dependent>
          </dep>
          <dep type="nummod">
            <governor idx="2">%</governor>
            <dependent idx="1">90</dependent>
          </dep>
          <dep type="nsubj:pass">
            <governor idx="7">vaccinated</governor>
            <dependent idx="2">%</dependent>
          </dep>
          <dep type="case">
            <governor idx="4">truckers</governor>
            <dependent idx="3">of</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="2">%</governor>
            <dependent idx="4">truckers</dependent>
          </dep>
          <dep type="aux:pass">
            <governor idx="7">vaccinated</governor>
            <dependent idx="5">are</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">vaccinated</governor>
            <dependent idx="6">already</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="7">vaccinated</governor>
            <dependent idx="8">lol</dependent>
          </dep>
          <dep type="punct">
            <governor idx="7">vaccinated</governor>
            <dependent idx="9">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">vaccinated</dependent>
          </dep>
          <dep type="nummod">
            <governor idx="2">%</governor>
            <dependent idx="1">90</dependent>
          </dep>
          <dep type="nsubj:pass">
            <governor idx="7">vaccinated</governor>
            <dependent idx="2">%</dependent>
          </dep>
          <dep type="case">
            <governor idx="4">truckers</governor>
            <dependent idx="3">of</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="2">%</governor>
            <dependent idx="4">truckers</dependent>
          </dep>
          <dep type="aux:pass">
            <governor idx="7">vaccinated</governor>
            <dependent idx="5">are</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">vaccinated</governor>
            <dependent idx="6">already</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="7">vaccinated</governor>
            <dependent idx="8">lol</dependent>
          </dep>
          <dep type="punct">
            <governor idx="7">vaccinated</governor>
            <dependent idx="9">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-plus-plus-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">vaccinated</dependent>
          </dep>
          <dep type="nummod">
            <governor idx="2">%</governor>
            <dependent idx="1">90</dependent>
          </dep>
          <dep type="nsubj:pass">
            <governor idx="7">vaccinated</governor>
            <dependent idx="2">%</dependent>
          </dep>
          <dep type="case">
            <governor idx="4">truckers</governor>
            <dependent idx="3">of</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="2">%</governor>
            <dependent idx="4">truckers</dependent>
          </dep>
          <dep type="aux:pass">
            <governor idx="7">vaccinated</governor>
            <dependent idx="5">are</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">vaccinated</governor>
            <dependent idx="6">already</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="7">vaccinated</governor>
            <dependent idx="8">lol</dependent>
          </dep>
          <dep type="punct">
            <governor idx="7">vaccinated</governor>
            <dependent idx="9">.</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="3">
        <tokens>
          <token id="1">
            <word>Bunch</word>
            <lemma>bunch</lemma>
            <CharacterOffsetBegin>117</CharacterOffsetBegin>
            <CharacterOffsetEnd>122</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
          </token>
          <token id="2">
            <word>of</word>
            <lemma>of</lemma>
            <CharacterOffsetBegin>123</CharacterOffsetBegin>
            <CharacterOffsetEnd>125</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
          </token>
          <token id="3">
            <word>bitch</word>
            <lemma>bitch</lemma>
            <CharacterOffsetBegin>126</CharacterOffsetBegin>
            <CharacterOffsetEnd>131</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
          </token>
          <token id="4">
            <word>ass</word>
            <lemma>ass</lemma>
            <CharacterOffsetBegin>132</CharacterOffsetBegin>
            <CharacterOffsetEnd>135</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
          </token>
          <token id="5">
            <word>cry</word>
            <lemma>cry</lemma>
            <CharacterOffsetBegin>136</CharacterOffsetBegin>
            <CharacterOffsetEnd>139</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>O</NER>
          </token>
          <token id="6">
            <word>babys</word>
            <lemma>baby</lemma>
            <CharacterOffsetBegin>140</CharacterOffsetBegin>
            <CharacterOffsetEnd>145</CharacterOffsetEnd>
            <POS>NNS</POS>
            <NER>O</NER>
          </token>
          <token id="7">
            <word>:</word>
            <lemma>:</lemma>
            <CharacterOffsetBegin>146</CharacterOffsetBegin>
            <CharacterOffsetEnd>147</CharacterOffsetEnd>
            <POS>:</POS>
            <NER>O</NER>
          </token>
          <token id="8">
            <word>’</word>
            <lemma>’</lemma>
            <CharacterOffsetBegin>147</CharacterOffsetBegin>
            <CharacterOffsetEnd>148</CharacterOffsetEnd>
            <POS>''</POS>
            <NER>O</NER>
          </token>
          <token id="9">
            <word>(</word>
            <lemma>(</lemma>
            <CharacterOffsetBegin>148</CharacterOffsetBegin>
            <CharacterOffsetEnd>149</CharacterOffsetEnd>
            <POS>-LRB-</POS>
            <NER>O</NER>
          </token>
        </tokens>
        <parse>(ROOT (FRAG (NP (NP (NN Bunch)) (PP (IN of) (NP (NN bitch) (NN ass) (NN cry) (NNS babys)))) (: :) (S (NP ('' ’)) (VP (-LRB- -LRB-))))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">Bunch</dependent>
          </dep>
          <dep type="case">
            <governor idx="6">babys</governor>
            <dependent idx="2">of</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="3">bitch</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="4">ass</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="5">cry</dependent>
          </dep>
          <dep type="nmod">
            <governor idx="1">Bunch</governor>
            <dependent idx="6">babys</dependent>
          </dep>
          <dep type="punct">
            <governor idx="1">Bunch</governor>
            <dependent idx="7">:</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="9">(</governor>
            <dependent idx="8">’</dependent>
          </dep>
          <dep type="parataxis">
            <governor idx="1">Bunch</governor>
            <dependent idx="9">(</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">Bunch</dependent>
          </dep>
          <dep type="case">
            <governor idx="6">babys</governor>
            <dependent idx="2">of</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="3">bitch</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="4">ass</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="5">cry</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="1">Bunch</governor>
            <dependent idx="6">babys</dependent>
          </dep>
          <dep type="punct">
            <governor idx="1">Bunch</governor>
            <dependent idx="7">:</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="9">(</governor>
            <dependent idx="8">’</dependent>
          </dep>
          <dep type="parataxis">
            <governor idx="1">Bunch</governor>
            <dependent idx="9">(</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">Bunch</dependent>
          </dep>
          <dep type="case">
            <governor idx="6">babys</governor>
            <dependent idx="2">of</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="3">bitch</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="4">ass</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="5">cry</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="1">Bunch</governor>
            <dependent idx="6">babys</dependent>
          </dep>
          <dep type="punct">
            <governor idx="1">Bunch</governor>
            <dependent idx="7">:</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="9">(</governor>
            <dependent idx="8">’</dependent>
          </dep>
          <dep type="parataxis">
            <governor idx="1">Bunch</governor>
            <dependent idx="9">(</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">Bunch</dependent>
          </dep>
          <dep type="case">
            <governor idx="6">babys</governor>
            <dependent idx="2">of</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="3">bitch</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="4">ass</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="5">cry</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="1">Bunch</governor>
            <dependent idx="6">babys</dependent>
          </dep>
          <dep type="punct">
            <governor idx="1">Bunch</governor>
            <dependent idx="7">:</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="9">(</governor>
            <dependent idx="8">’</dependent>
          </dep>
          <dep type="parataxis">
            <governor idx="1">Bunch</governor>
            <dependent idx="9">(</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-plus-plus-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">Bunch</dependent>
          </dep>
          <dep type="case">
            <governor idx="6">babys</governor>
            <dependent idx="2">of</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="3">bitch</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="4">ass</dependent>
          </dep>
          <dep type="compound">
            <governor idx="6">babys</governor>
            <dependent idx="5">cry</dependent>
          </dep>
          <dep type="nmod:of">
            <governor idx="1">Bunch</governor>
            <dependent idx="6">babys</dependent>
          </dep>
          <dep type="punct">
            <governor idx="1">Bunch</governor>
            <dependent idx="7">:</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="9">(</governor>
            <dependent idx="8">’</dependent>
          </dep>
          <dep type="parataxis">
            <governor idx="1">Bunch</governor>
            <dependent idx="9">(</dependent>
          </dep>
        </dependencies>
      </sentence>
    </sentences>
  </document>
</root>
