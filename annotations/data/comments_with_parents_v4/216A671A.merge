0	1	People	people	NNS	nsubj	3	O	 (ROOT (S (NP (NNS People))	1	1
0	2	just	just	RB	advmod	3	O	 (ADVP (RB just))	1	1
0	3	want	want	VBP	root	0	O	 (VP (VBP want)	1	1
0	4	warm	warm	JJ	advmod	5	O	 (NP (NP (ADJP (JJ warm)	1	1
0	5	happy	happy	JJ	amod	6	O	 (JJ happy))	1	1
0	6	feelings	feeling	NNS	obj	3	O	 (NNS feelings))	1	1
0	7	of	of	IN	case	8	O	 (PP (IN of)	1	1
0	8	security	security	NN	nmod	6	O	 (NP (NN security)))))	1	1
0	9	.	.	.	punct	3	O	 (. .)))	1	1
1	1	Its	its	PRP$	root	0	O	 (ROOT (NP (NP (PRP$ Its))	1	1
1	2	a	a	DT	det	4	O	 (NP (NP (DT a)	2	1
1	3	"	"	``	punct	4	O	 (`` ")	2	1
1	4	lie	lie	NN	dep	1	O	 (NN lie))	2	1
1	5	to	to	IN	case	6	O	 (PP (IN to)	2	1
1	6	me	I	PRP	nmod	4	O	 (NP (NP (PRP me))	2	1
1	7	"	"	``	punct	6	O	 (`` ")	2	1
1	8	thing	thing	NN	dep	6	O	 (NP (NN thing)))))	2	1
1	9	.	.	.	punct	1	O	 (. .)))	2	1
2	1	They	they	PRP	nsubj	4	O	 (ROOT (S (NP (PRP They))	2	1
2	2	do	do	VBP	aux	4	O	 (VP (VBP do)	3	1
2	3	n't	not	RB	advmod	4	O	 (RB n't)	3	1
2	4	want	want	VB	root	0	O	 (VP (VB want)	3	1
2	5	the	the	DT	det	6	O	 (NP (NP (DT the)	3	1
2	6	truth	truth	NN	iobj	4	O	 (NN truth))	3	1
2	7	just	just	RB	advmod	6	O	 (RB just)	3	1
2	8	a	a	DT	det	9	O	 (NP (DT a)	3	1
2	9	reason	reason	NN	dep	6	O	 (NN reason)))	3	1
2	10	to	to	TO	mark	12	O	 (S (VP (TO to)	3	1
2	11	"	"	``	punct	12	O	 (`` ")	3	1
2	12	feel	feel	VB	advcl	4	O	 (VP (VB feel)	3	1
2	13	safe	safe	JJ	xcomp	12	O	 (ADJP (JJ safe)))	3	1
2	14	"	"	''	punct	12	O	 ('' ")))))	3	1
2	15	.	.	.	punct	4	O	 (. .)))	3	1
3	1	The	the	DT	det	2	O	 (ROOT (S (NP (NP (DT The)	3	1
3	2	masks	mask	NNS	nsubj	7	O	 (NNS masks))	3	1
3	3	the	the	DT	det	4	O	 (NP (DT the)	4	1
3	4	vax	vax	NN	dep	2	O	 (NN vax)))	4	1
3	5	were	be	VBD	cop	7	O	 (VP (VBD were)	4	1
3	6	all	all	DT	det	7	O	 (NP (DT all)	4	1
3	7	ploys	ploy	NNS	root	0	O	 (NNS ploys)	4	1
3	8	to	to	TO	mark	9	O	 (S (VP (TO to)	4	1
3	9	make	make	VB	acl	7	O	 (VP (VB make)	4	1
3	10	sheep	sheep	NNS	nsubj	12	O	 (SBAR (S (NP (NNS sheep))	4	1
3	11	"	"	``	punct	12	O	 (`` ")	5	1
3	12	feel	feel	VBP	ccomp	9	O	 (VP (VBP feel)	5	1
3	13	safe	safe	JJ	xcomp	12	O	 (ADJP (JJ safe)))	5	1
3	14	"	"	''	punct	12	O	 ('' "))))))))	5	1
3	15	.	.	.	punct	7	O	 (. .)))	5	1
4	1	Its	its	PRP$	root	0	O	 (ROOT (NP (NP (PRP$ Its))	5	1
4	2	like	like	IN	case	4	O	 (PP (IN like)	5	1
4	3	a	a	DT	det	4	O	 (NP (NP (DT a)	5	1
4	4	gate	gate	NN	nmod	1	O	 (NN gate))	5	1
4	5	around	around	IN	case	8	O	 (PP (IN around)	6	1
4	6	a	a	DT	det	8	O	 (NP (DT a)	6	1
4	7	sheep	sheep	NN	compound	8	O	 (NN sheep)	6	1
4	8	herd	herd	NN	nmod	4	O	 (NN herd)))))	6	1
4	9	.	.	.	punct	1	O	 (. .)))	6	1
5	1	It	it	PRP	nsubj	2	O	 (ROOT (S (S (NP (PRP It))	6	1
5	2	wont	wont	VBP	root	0	O	 (VP (VBP wont)	6	1
5	3	keep	keep	VB	xcomp	2	O	 (VP (VB keep)	6	1
5	4	wolves	wolf	NNS	obj	3	O	 (NP (NNS wolves))	6	1
5	5	out	out	RB	advmod	3	O	 (ADVP (RB out)))))	7	1
5	6	,	,	,	punct	2	O	 (, ,)	7	1
5	7	but	but	CC	cc	23	O	 (CC but)	7	1
5	8	if	if	IN	mark	10	O	 (S (SBAR (IN if)	7	1
5	9	you	you	PRP	nsubj	10	O	 (S (NP (PRP you))	7	1
5	10	tell	tell	VBP	advcl	23	O	 (VP (VBP tell)	7	1
5	11	the	the	DT	det	12	O	 (NP (NP (DT the)	8	1
5	12	sheep	sheep	NN	obj	10	O	 (NN sheep))	9	1
5	13	the	the	DT	det	14	O	 (SBAR (S (NP (DT the)	9	1
5	14	fence	fence	NN	nsubj	18	O	 (NN fence))	9	1
5	15	is	be	VBZ	cop	18	O	 (VP (VBZ is)	9	1
5	16	for	for	IN	case	18	O	 (PP (IN for)	9	1
5	17	their	they	PRP$	nmod:poss	18	O	 (NP (PRP$ their)	9	1
5	18	safety	safety	NN	acl:relcl	12	O	 (NN safety))))))))))	9	1
5	19	,	,	,	punct	23	O	 (, ,)	9	1
5	20	they	they	PRP	nsubj	23	O	 (NP (PRP they))	9	1
5	21	will	will	MD	aux	23	O	 (VP (MD will)	9	1
5	22	happily	happily	RB	advmod	23	O	 (ADVP (RB happily))	9	1
5	23	oblige	oblige	VB	conj	2	O	 (VP (VB oblige)	10	1
5	24	to	to	IN	case	26	O	 (PP (IN to)	10	1
5	25	the	the	DT	det	26	O	 (NP (DT the)	10	1
5	26	gate	gate	NN	obl	23	O	 (NN gate))))))	10	1
5	27	.	.	.	punct	2	O	 (. .)))	10	1
6	1	All	all	PDT	det:predet	2	O	 (ROOT (FRAG (NP (PDT All)	10	1
6	2	the	the	DT	root	0	O	 (DT the))	10	1
6	3	while	while	IN	case	8	O	 (PP (IN while)	10	1
6	4	its	its	PRP$	nmod:poss	8	O	 (NP (PRP$ its)	10	1
6	5	just	just	RB	advmod	6	O	 (ADJP (RB just)	11	1
6	6	a	a	DT	amod	8	O	 (DT a))	11	1
6	7	trap	trap	NN	compound	8	O	 (NN trap)	11	1
6	8	set	set	NN	obl	2	O	 (NN set)))	11	1
6	9	for	for	IN	case	10	O	 (PP (IN for)	11	1
6	10	them	they	PRP	obl	2	O	 (NP (PRP them)))	11	1
6	11	.	.	.	punct	2	O	 (. .)))	11	1
7	1	The	the	DT	det	2	O	 (ROOT (S (NP (DT The)	11	1
7	2	wolves	wolf	NNS	nsubj	5	O	 (NNS wolves))	11	1
7	3	can	can	MD	aux	5	O	 (VP (MD can)	11	1
7	4	still	still	RB	advmod	5	O	 (ADVP (RB still))	11	1
7	5	get	get	VB	root	0	O	 (VP (VB get)	12	1
7	6	in	in	IN	obl	5	O	 (PP (IN in))))	12	1
7	7	.	.	.	punct	5	O	 (. .)))	12	1
8	1	You	you	PRP	nsubj	4	O	 (ROOT (S (NP (PRP You))	12	1
8	2	are	be	VBP	cop	4	O	 (VP (VBP are)	12	1
8	3	"	"	``	punct	4	O	 (ADJP (`` ")	12	1
8	4	stupid	stupid	JJ	root	0	O	 (JJ stupid)	12	1
8	5	"	"	''	punct	4	O	 ('' ")))	12	1
8	6	.	.	.	punct	4	O	 (. .)))	12	1
