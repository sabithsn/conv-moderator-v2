0	1	Maybe	maybe	RB	advmod	2	O	 (ROOT (S (ADVP (RB Maybe))	1	1
0	2	try	try	VB	root	0	O	 (VP (VP (VB try)	1	1
0	3	getting	get	VBG	xcomp	2	O	 (S (VP (VBG getting)	1	1
0	4	off	off	IN	case	7	O	 (PP (IN off)	1	1
0	5	your	you	PRP$	nmod:poss	7	O	 (NP (PRP$ your)	1	1
0	6	lazy	lazy	JJ	amod	7	O	 (JJ lazy)	1	1
0	7	ass	ass	NN	obl	3	O	 (NN ass))))))	1	1
0	8	and	and	CC	cc	9	O	 (CC and)	2	1
0	9	get	get	VB	conj	2	O	 (VP (VB get)	2	1
0	10	a	a	DT	det	11	O	 (NP (DT a)	2	1
0	11	job	job	NN	obj	9	O	 (NN job))	2	1
0	12	to	to	TO	mark	13	O	 (S (VP (TO to)	2	1
0	13	pay	pay	VB	advcl	9	O	 (VP (VB pay)	2	1
0	14	off	off	RP	compound:prt	13	O	 (PRT (RP off))	2	1
0	15	the	the	DT	det	16	O	 (NP (NP (DT the)	2	1
0	16	money	money	NN	obj	13	O	 (NN money))	2	1
0	17	YOU	you	PRP	nsubj	18	O	 (SBAR (S (NP (PRP YOU))	2	1
0	18	borrowed	borrow	VBD	acl:relcl	16	O	 (VP (VBD borrowed))))))))))	2	1
0	19	?	?	.	punct	2	O	 (. ?)))	2	1
