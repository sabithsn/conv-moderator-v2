0	1	Poor	poor	JJ	root	0	O	 (ROOT (NP (NP (JJ Poor))	1	1
0	2	,	,	,	punct	1	O	 (, ,)	1	1
0	3	poor	poor	JJ	amod	4	O	 (NP (JJ poor)	1	1
0	4	victim	victim	NN	appos	1	O	 (NN victim))	1	1
0	5	.	.	.	punct	1	O	 (. .)))	1	1
1	1	I	I	PRP	nsubj	3	O	 (ROOT (S (NP (PRP I))	1	1
1	2	'll	will	MD	aux	3	O	 (VP (MD 'll)	2	1
1	3	take	take	VB	root	0	O	 (VP (VB take)	2	1
1	4	a	a	DT	det	6	O	 (NP (DT a)	2	1
1	5	deep	deep	JJ	amod	6	O	 (JJ deep)	2	1
1	6	breath	breath	NN	obj	3	O	 (NN breath))	2	1
1	7	for	for	IN	case	8	O	 (PP (IN for)	2	1
1	8	you	you	PRP	obl	3	O	 (NP (PRP you)))	2	1
1	9	while	while	IN	mark	11	O	 (SBAR (IN while)	2	1
1	10	I	I	PRP	nsubj	11	O	 (S (NP (PRP I))	3	1
1	11	continue	continue	VBP	advcl	3	O	 (VP (VBP continue)	3	1
1	12	to	to	TO	mark	13	O	 (S (VP (TO to)	3	1
1	13	work	work	VB	xcomp	11	O	 (VP (VB work)	3	1
1	14	at	at	IN	case	16	O	 (PP (IN at)	3	1
1	15	my	my	PRP$	nmod:poss	16	O	 (NP (NP (PRP$ my)	3	1
1	16	job	job	NN	obl	13	O	 (NN job))	3	1
1	17	ya	ya	PRP	dep	18	O	 (NP (PRP ya)	3	1
1	18	wanker	wanker	NN	dep	16	O	 (NN wanker))))))))))))	3	1
1	19	.	.	.	punct	3	O	 (. .)))	3	1
