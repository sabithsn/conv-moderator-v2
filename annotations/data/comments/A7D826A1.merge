0	1	Do	do	VBP	aux	3	O	 (ROOT (SQ (VBP Do)	1	1
0	2	we	we	PRP	nsubj	3	O	 (NP (PRP we))	1	1
0	3	have	have	VBP	root	0	O	 (VP (VBP have)	1	1
0	4	laws	law	NNS	obj	3	O	 (NP (NP (NNS laws))	1	1
0	5	saying	say	VBG	acl	4	O	 (VP (VBG saying)	2	1
0	6	we	we	PRP	nsubj	9	O	 (SBAR (S (NP (PRP we))	3	1
0	7	can	can	MD	aux	9	O	 (VP (MD can)	3	1
0	8	not	not	RB	advmod	9	O	 (RB not)	3	1
0	9	kill	kill	VB	ccomp	5	O	 (VP (VB kill)	3	1
0	10	frogs	frog	NNS	obj	9	O	 (NP (NNS frogs)))))))))	3	1
0	11	?	?	.	punct	3	O	 (. ?)))	3	1
1	1	What	what	WDT	det	2	O	 (ROOT (SBARQ (WHNP (WHNP (WDT What)	3	1
1	2	kind	kind	NN	dep	7	O	 (NN kind))	4	1
1	3	of	of	IN	case	4	O	 (PP (IN of)	4	1
1	4	argument	argument	NN	nmod	2	O	 (NP (NN argument))))	4	1
1	5	are	be	VBP	aux	7	O	 (SQ (VBP are)	4	1
1	6	you	you	PRP	nsubj	7	O	 (NP (PRP you))	4	1
1	7	trying	try	VBG	root	0	O	 (VP (VBG trying)	4	1
1	8	to	to	TO	mark	9	O	 (S (VP (TO to)	4	1
1	9	pose	pose	VB	xcomp	7	O	 (VP (VB pose))))))	4	1
1	10	?	?	.	punct	7	O	 (. ?)))	4	1
2	1	Humans	human	NNS	root	0	O	 (ROOT (S (NP (NP (NNS Humans))	4	1
2	2	<	<	-LRB-	punct	1	O	 (-LRB- <)	5	1
2	3	>	>	SYM	dep	4	O	 (PP (SYM >)	5	1
2	4	frogs	frog	NNS	nmod	1	O	 (NP (NNS frogs))))	5	1
2	5	.	.	.	punct	1	O	 (. .)))	5	1
